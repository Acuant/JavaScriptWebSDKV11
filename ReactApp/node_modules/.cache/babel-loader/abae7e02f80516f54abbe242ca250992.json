{"ast":null,"code":"import _objectSpread from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\SourceControl\\\\idscango-web\\\\src\\\\screens\\\\CaptureSelfie.js\";\nimport React, { Component, Fragment } from 'react';\nimport Header from './Header';\nimport { connect } from \"react-redux\";\nimport FaceMatchService from \"../services/api/faceMatch\";\nimport { bindActionCreators } from \"redux\";\nimport { processID } from \"./actions/processDataActions\";\nimport Processing from \"./Processing\";\n\nvar CaptureSelfie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CaptureSelfie, _Component);\n\n  function CaptureSelfie(props) {\n    var _this;\n\n    _classCallCheck(this, CaptureSelfie);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CaptureSelfie).call(this, props));\n    _this.state = {\n      loading: false,\n      inputValue: '',\n      selfie: null\n    };\n    return _this;\n  }\n\n  _createClass(CaptureSelfie, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var instanceID = this.props.instanceID;\n      this.props.processID(instanceID);\n    }\n  }, {\n    key: \"processSelfieAndRedirect\",\n    value: function processSelfieAndRedirect() {\n      var _this2 = this;\n\n      if (this.props.resultData !== null) {\n        if (this.props.resultData.Photo.split(',')[1] !== undefined) {\n          if (this.state.selfie !== null) {\n            FaceMatchService.processFaceMatch({\n              'Data': {\n                'ImageOne': this.props.resultData.Photo.split(',')[1],\n                'ImageTwo': this.state.selfie\n              },\n              'Settings': {\n                'SubscriptionId': process.env.REACT_APP_SUBSCRIPTION_ID\n              }\n            }).then(function (res) {\n              _this2.props.dispatch({\n                payload: res.Score,\n                type: '@@acuant/ADD_FACE_MATCH_DATA'\n              });\n\n              _this2.props.history.push('/results/default');\n            }).catch(function (err) {\n              throw new Error(err);\n            });\n          }\n        } else {\n          this.props.history.push('/results/default');\n        }\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.resultData !== this.props.resultData) {\n        this.processSelfieAndRedirect();\n      }\n    }\n  }, {\n    key: \"updateInputValue\",\n    value: function updateInputValue(evt) {\n      var self = this;\n      var file = evt.target;\n      var reader = new FileReader();\n      reader.readAsDataURL(file.files[0]);\n\n      reader.onload = function (e) {\n        self.setState({\n          loading: true\n        });\n        var img = document.createElement(\"img\");\n        img.src = e.target.result;\n\n        img.onload = function () {\n          var canvas = document.createElement(\"canvas\");\n          var ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n          var MAX_WIDTH = 480;\n          var MAX_HEIGHT = 640;\n          var width = img.width;\n          var height = img.height;\n\n          if (width > height) {\n            if (width > MAX_WIDTH) {\n              height *= MAX_WIDTH / width;\n              width = MAX_WIDTH;\n            }\n          } else {\n            if (height > MAX_HEIGHT) {\n              width *= MAX_HEIGHT / height;\n              height = MAX_HEIGHT;\n            }\n          }\n\n          canvas.width = width;\n          canvas.height = height;\n          ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0, width, height);\n          var dataurl = canvas.toDataURL(file.files[0].type, 90 * .01);\n          var selfie = dataurl.split(\",\")[1];\n          self.setState({\n            selfie: selfie\n          }, function () {\n            self.forceUpdate();\n            self.processSelfieAndRedirect();\n          });\n        };\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.loading) {\n        return React.createElement(Processing, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"body column capture_photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row wrapper description_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Take a selfie image using the front camera of your device.\")), React.createElement(\"div\", {\n        className: \"capture_group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row wrapper capture_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"idscango\",\n        className: \"capture\",\n        src: require('../assets/images/illustration2@3x.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        capture: \"user\",\n        name: 'camera',\n        id: \"camera\",\n        className: \"hidden\",\n        onChange: this.updateInputValue.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"wrapper column capture_controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"camera\",\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'buttonBgText',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Take selfie image\")), React.createElement(\"div\", {\n        className: \"btn outline\",\n        onClick: function onClick() {\n          _this3.props.history.push('/results/default');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'buttonBdText',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Skip this step\"))))));\n    }\n  }]);\n\n  return CaptureSelfie;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    instanceID: state.config.instanceID,\n    faceMatch: state.processedData.faceMatch,\n    resultData: state.processedData.result\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  var actions = bindActionCreators({\n    processID: processID\n  }, dispatch);\n  return _objectSpread({}, actions, {\n    dispatch: dispatch\n  });\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CaptureSelfie);","map":{"version":3,"sources":["C:\\SourceControl\\idscango-web\\src\\screens\\CaptureSelfie.js"],"names":["React","Component","Fragment","Header","connect","FaceMatchService","bindActionCreators","processID","Processing","CaptureSelfie","props","state","loading","inputValue","selfie","instanceID","resultData","Photo","split","undefined","processFaceMatch","process","env","REACT_APP_SUBSCRIPTION_ID","then","res","dispatch","payload","Score","type","history","push","catch","err","Error","prevProps","prevState","processSelfieAndRedirect","evt","self","file","target","reader","FileReader","readAsDataURL","files","onload","e","setState","img","document","createElement","src","result","canvas","ctx","getContext","drawImage","MAX_WIDTH","MAX_HEIGHT","width","height","dataurl","toDataURL","forceUpdate","require","updateInputValue","bind","mapStateToProps","config","faceMatch","processedData","mapDispatchToProps","actions"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport Header from './Header';\r\nimport {connect} from \"react-redux\";\r\nimport FaceMatchService from \"../services/api/faceMatch\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {processID} from \"./actions/processDataActions\";\r\nimport Processing from \"./Processing\";\r\n\r\nclass CaptureSelfie extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            inputValue: '',\r\n            selfie: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {instanceID} = this.props;\r\n        this.props.processID(instanceID);\r\n    }\r\n\r\n    processSelfieAndRedirect() {\r\n        if (this.props.resultData !== null) {\r\n            if (this.props.resultData.Photo.split(',')[1] !== undefined) {\r\n                if (this.state.selfie !== null) {\r\n                    FaceMatchService.processFaceMatch({\r\n                        'Data': {\r\n                            'ImageOne': this.props.resultData.Photo.split(',')[1],\r\n                            'ImageTwo': this.state.selfie\r\n                        },\r\n                        'Settings': {\r\n                            'SubscriptionId': process.env.REACT_APP_SUBSCRIPTION_ID\r\n                        }\r\n                    }).then(res => {\r\n                        this.props.dispatch({payload: res.Score, type: '@@acuant/ADD_FACE_MATCH_DATA'});\r\n                        this.props.history.push('/results/default');\r\n                    })\r\n                    .catch(err => {\r\n                        throw new Error(err);\r\n                    });\r\n                }\r\n            } else {\r\n                this.props.history.push('/results/default');\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.resultData !== this.props.resultData) {\r\n            this.processSelfieAndRedirect();\r\n        }\r\n    }\r\n\r\n    updateInputValue(evt) {\r\n        let self = this;\r\n        let file = evt.target;\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file.files[0]);\r\n        reader.onload = (e) => {\r\n            \r\n            self.setState({loading: true});\r\n            let img = document.createElement(\"img\");\r\n            img.src = e.target.result;\r\n            img.onload = function () {\r\n\r\n                let canvas = document.createElement(\"canvas\");\r\n                let ctx = canvas.getContext(\"2d\");\r\n                ctx.drawImage(img, 0, 0);\r\n\r\n                let MAX_WIDTH = 480;\r\n                let MAX_HEIGHT = 640;\r\n                let width = img.width;\r\n                let height = img.height;\r\n\r\n                if (width > height) {\r\n                    if (width > MAX_WIDTH) {\r\n                        height *= MAX_WIDTH / width;\r\n                        width = MAX_WIDTH;\r\n                    }\r\n                } else {\r\n                    if (height > MAX_HEIGHT) {\r\n                        width *= MAX_HEIGHT / height;\r\n                        height = MAX_HEIGHT;\r\n                    }\r\n                }\r\n\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                ctx = canvas.getContext(\"2d\");\r\n                ctx.drawImage(img, 0, 0, width, height);\r\n\r\n                let dataurl = canvas.toDataURL(file.files[0].type, 90 * .01);\r\n                let selfie = dataurl.split(\",\")[1];\r\n                self.setState({\r\n                    selfie\r\n                }, () => {\r\n                    self.forceUpdate();\r\n                    self.processSelfieAndRedirect();\r\n                })\r\n            };\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <Processing/>\r\n        }\r\n        return (\r\n            <Fragment>\r\n\r\n                <Header />\r\n\r\n                <div className='body column capture_photo'>\r\n\r\n                    <div className='row wrapper description_container'>\r\n                        <p className='description'>Take a selfie image using the front camera of your device.</p>\r\n                    </div>\r\n                    \r\n                    <div className=\"capture_group\">\r\n\r\n                        <div className='row wrapper capture_container'>\r\n\r\n                            <img alt='idscango' className='capture' src={require('../assets/images/illustration2@3x.png')}/>\r\n                            <input type=\"file\"\r\n                                accept=\"image/*\"\r\n                                capture=\"user\"\r\n                                   name={'camera'}\r\n                                id=\"camera\"\r\n                                className='hidden'\r\n                                onChange={this.updateInputValue.bind(this)}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"wrapper column capture_controls\">\r\n\r\n                            <label htmlFor=\"camera\" className='btn'>\r\n                                <p className={'buttonBgText'}>Take selfie image</p>\r\n                            </label>\r\n                            <div className='btn outline' onClick={() => {this.props.history.push('/results/default')}}>\r\n                                <p className={'buttonBdText'}>Skip this step</p>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        instanceID: state.config.instanceID,\r\n        faceMatch: state.processedData.faceMatch,\r\n        resultData: state.processedData.result\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    let actions = bindActionCreators({processID}, dispatch);\r\n    return {...actions, dispatch};\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CaptureSelfie);\r\n"]},"metadata":{},"sourceType":"module"}