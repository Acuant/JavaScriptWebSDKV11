{"ast":null,"code":"import _classCallCheck from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\SourceControl\\\\idscango-web\\\\src\\\\screens\\\\ProcessedImageResult.js\";\nimport React, { Component, Fragment } from 'react';\nimport Header from \"./Header\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { decrementSidesLeft, incrementSidesLeft, setCardOrientation } from \"./actions/idPropertiesActions\";\n\nvar ProcessedImageResult =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProcessedImageResult, _Component);\n\n  function ProcessedImageResult(props) {\n    _classCallCheck(this, ProcessedImageResult);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProcessedImageResult).call(this, props));\n  }\n\n  _createClass(ProcessedImageResult, [{\n    key: \"proceedToNextStep\",\n    value: function proceedToNextStep() {\n      /**\r\n       * If ID is Driver License\r\n       */\n      var processedData = this.props.location.state;\n\n      if (processedData.classificationData && processedData.classificationData.PresentationChanged) {\n        this.props.setCardOrientation(0);\n      } else {\n        this.props.setCardOrientation(1);\n      }\n\n      if (processedData.classificationData && processedData.classificationData.Type.Size !== 3 || this.props.idProperties.cardType === 2) {\n        if (this.props.idProperties.sidesLeft === 1) {\n          this.props.history.push('/capture/photo');\n        } else {\n          if (process.env.REACT_APP_FRM_ENABLED === 'true' && this.props.idProperties.cardType === 1) {\n            this.props.history.push('/capture/selfie');\n          } else {\n            if (this.props.idProperties.cardType === 1) {\n              this.props.history.push('/results/default');\n            }\n\n            if (this.props.idProperties.cardType === 2) {\n              this.props.history.push('/results/medicard');\n            }\n          }\n        }\n      } else {\n        if (process.env.REACT_APP_FRM_ENABLED === 'true' && this.props.idProperties.cardType === 1) {\n          this.props.history.push('/capture/selfie');\n        } else {\n          this.props.history.push('/results/default');\n        }\n      }\n    }\n  }, {\n    key: \"retryPhoto\",\n    value: function retryPhoto() {\n      this.props.incrementSidesLeft();\n      this.props.history.push('/capture/photo', {\n        isRetry: true\n      });\n    }\n  }, {\n    key: \"renderTitleText\",\n    value: function renderTitleText() {\n      if (this.props.blurry) return \"Image appears blurry. Please retry.\";\n      if (this.props.hasGlare) return \"Image has glare. Please retry.\";\n      return \"Ensure all texts are visible.\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var processedData = this.props.location.state;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"body column capture_photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, processedData.blurry && React.createElement(\"div\", {\n        className: \"column description_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"idscango\",\n        className: \"icon\",\n        src: require('../assets/images/icon_attention@2x.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: 'description error',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.renderTitleText())), React.createElement(\"div\", {\n        className: \"row wrapper description_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, !processedData.blurry && React.createElement(\"p\", {\n        className: 'description',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.renderTitleText())), React.createElement(\"div\", {\n        className: \"capture_group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row wrapper capture_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, processedData.cardImage && React.createElement(\"img\", {\n        alt: 'idscango',\n        src: processedData.cardImage,\n        className: \"capture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"wrapper column capture_controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: 'btn',\n        onClick: function onClick() {\n          return _this.proceedToNextStep();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'buttonBgText',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Continue with this image\")), !processedData.orientation && React.createElement(\"div\", {\n        className: 'btn outline',\n        onClick: function onClick() {\n          return _this.retryPhoto();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'buttonBdText',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Retry\"))))));\n    }\n  }]);\n\n  return ProcessedImageResult;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return state;\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    decrementSidesLeft: decrementSidesLeft,\n    incrementSidesLeft: incrementSidesLeft,\n    setCardOrientation: setCardOrientation\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcessedImageResult);","map":{"version":3,"sources":["C:\\SourceControl\\idscango-web\\src\\screens\\ProcessedImageResult.js"],"names":["React","Component","Fragment","Header","bindActionCreators","connect","decrementSidesLeft","incrementSidesLeft","setCardOrientation","ProcessedImageResult","props","processedData","location","state","classificationData","PresentationChanged","Type","Size","idProperties","cardType","sidesLeft","history","push","process","env","REACT_APP_FRM_ENABLED","isRetry","blurry","hasGlare","require","renderTitleText","cardImage","proceedToNextStep","orientation","retryPhoto","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport Header from \"./Header\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {decrementSidesLeft, incrementSidesLeft, setCardOrientation} from \"./actions/idPropertiesActions\";\r\n\r\nclass ProcessedImageResult extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    proceedToNextStep() {\r\n        /**\r\n         * If ID is Driver License\r\n         */\r\n        let processedData = this.props.location.state;\r\n        if (processedData.classificationData && processedData.classificationData.PresentationChanged) {\r\n            this.props.setCardOrientation(0);\r\n        } else {\r\n            this.props.setCardOrientation(1);\r\n        }\r\n        if (processedData.classificationData && processedData.classificationData.Type.Size !== 3 || this.props.idProperties.cardType === 2) {\r\n            if (this.props.idProperties.sidesLeft === 1) {\r\n                this.props.history.push('/capture/photo');\r\n            } else {\r\n                if (process.env.REACT_APP_FRM_ENABLED === 'true' && this.props.idProperties.cardType === 1) {\r\n                    this.props.history.push('/capture/selfie')\r\n                } else {\r\n                    if (this.props.idProperties.cardType === 1) {\r\n                        this.props.history.push('/results/default');\r\n                    }\r\n\r\n                    if (this.props.idProperties.cardType === 2) {\r\n                        this.props.history.push('/results/medicard');\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (process.env.REACT_APP_FRM_ENABLED === 'true' && this.props.idProperties.cardType === 1) {\r\n                this.props.history.push('/capture/selfie')\r\n            } else {\r\n                this.props.history.push('/results/default');\r\n            }\r\n        }\r\n    }\r\n\r\n    retryPhoto() {\r\n        this.props.incrementSidesLeft();\r\n        this.props.history.push('/capture/photo', {isRetry: true})\r\n    }\r\n\r\n    renderTitleText() {\r\n        if (this.props.blurry) return \"Image appears blurry. Please retry.\";\r\n        if (this.props.hasGlare) return \"Image has glare. Please retry.\";\r\n        return \"Ensure all texts are visible.\"\r\n    }\r\n\r\n\r\n    render() {\r\n        let processedData = this.props.location.state;\r\n        return (\r\n            <Fragment>\r\n\r\n                <Header />\r\n\r\n                <div className='body column capture_photo'>\r\n\r\n                    {processedData.blurry &&\r\n\r\n                        <div className='column description_container'>\r\n                            <img alt='idscango' className='icon' src={require('../assets/images/icon_attention@2x.png')} />\r\n                            <p className={'description error'}>{this.renderTitleText()}</p>\r\n                        </div>\r\n\r\n                    }\r\n\r\n                    <div className='row wrapper description_container'>\r\n                        {!processedData.blurry && <p className={'description'}>{this.renderTitleText()}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"capture_group\">\r\n\r\n                        <div className='row wrapper capture_container'>\r\n                            {processedData.cardImage && <img alt={'idscango'} src={processedData.cardImage} className='capture'/>}\r\n                        </div>\r\n\r\n                        <div className=\"wrapper column capture_controls\">\r\n\r\n                            <a className={'btn'} onClick={() => this.proceedToNextStep()}>\r\n                                <p className={'buttonBgText'}>Continue with this image</p>\r\n                            </a>\r\n                            {!processedData.orientation && <div className={'btn outline'} onClick={() => this.retryPhoto()}>\r\n                                <p className={'buttonBdText'}>Retry</p>\r\n                            </div>}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return state;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({decrementSidesLeft, incrementSidesLeft, setCardOrientation}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcessedImageResult);"]},"metadata":{},"sourceType":"module"}