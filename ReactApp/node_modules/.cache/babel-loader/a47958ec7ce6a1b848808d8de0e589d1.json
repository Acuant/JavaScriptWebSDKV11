{"ast":null,"code":"import _classCallCheck from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\SourceControl\\\\idscango-web\\\\src\\\\screens\\\\ProcessedImageResult.js\";\nimport React, { Component, Fragment } from 'react';\nimport Header from \"./Header\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { decrementSidesLeft, incrementSidesLeft, setCardOrientation } from \"./actions/idPropertiesActions\";\nimport ApiService from \"../services/api/api\";\nimport Processing from \"./Processing\";\n\nvar ProcessedImageResult =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProcessedImageResult, _Component);\n\n  function ProcessedImageResult(props) {\n    var _this;\n\n    _classCallCheck(this, ProcessedImageResult);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProcessedImageResult).call(this, props));\n    _this.state = {\n      processing: false\n    };\n    return _this;\n  }\n\n  _createClass(ProcessedImageResult, [{\n    key: \"proceedToNextStep\",\n    value: function proceedToNextStep() {\n      var processedData = this.props.location.state;\n      this.sendImageToAPI(this.dataURLToBlob(processedData.cardImage));\n    }\n  }, {\n    key: \"processClassification\",\n    value: function processClassification(classificationData) {\n      var processedData = this.props.location.state;\n      processedData.classificationData = classificationData;\n      this.setProcessing(false);\n\n      if (processedData.classificationData && processedData.classificationData.PresentationChanged) {\n        this.props.setCardOrientation(0);\n      } else {\n        this.props.setCardOrientation(1);\n      }\n\n      if (processedData.classificationData && processedData.classificationData.Type.Size !== 3 || this.props.cardType === 2) {\n        this.props.decrementSidesLeft();\n\n        if (this.props.sidesLeft === 1) {\n          this.props.history.push('/capture/photo');\n        } else {\n          if (process.env.REACT_APP_FRM_ENABLED === 'true' && this.props.cardType === 1) {\n            this.props.history.push('/capture/selfie');\n          } else {\n            if (this.props.cardType === 1) {\n              this.props.history.push('/results/default');\n            }\n\n            if (this.props.cardType === 2) {\n              this.props.history.push('/results/medicard');\n            }\n          }\n        }\n      } else {\n        if (process.env.REACT_APP_FRM_ENABLED === 'true' && this.props.cardType === 1) {\n          this.props.history.push('/capture/selfie');\n        } else {\n          this.props.history.push('/results/default');\n        }\n      }\n    }\n  }, {\n    key: \"setProcessing\",\n    value: function setProcessing(value) {\n      this.setState({\n        processing: value\n      });\n    }\n  }, {\n    key: \"sendImageToAPI\",\n    value: function sendImageToAPI(blobData) {\n      var _this2 = this;\n\n      this.setProcessing(true);\n\n      if (this.props.frontSubmitted && this.props.sidesLeft === 2 || this.props.backSubmitted && this.props.sidesLeft === 2 || this.props.backSubmitted && this.props.frontSubmitted && this.props.sidesLeft === 1) {\n        ApiService.replaceImage(this.props.instanceID, this.props.orientation, blobData).then(function (response) {\n          if (_this2.props.cardType === 1) {\n            _this2.getClassification();\n          } else {\n            _this2.processClassification(null);\n          }\n        }).catch(function (err) {\n          _this2.setProcessing(false);\n\n          _this2.props.history.push({\n            pathname: '/error/default',\n            state: {\n              retryLastStep: true\n            }\n          });\n\n          throw new Error(err);\n        });\n      } else {\n        ApiService.postImage(this.props.instanceID, this.props.orientation, blobData).then(function (response) {\n          if (_this2.props.cardType === 1) {\n            _this2.getClassification();\n          } else {\n            _this2.processClassification(null);\n          }\n        }).catch(function (err) {\n          _this2.setProcessing(false);\n\n          _this2.props.history.push({\n            pathname: '/error/default',\n            state: {\n              retryLastStep: true\n            }\n          });\n\n          throw new Error(err);\n        });\n      }\n    }\n  }, {\n    key: \"getClassification\",\n    value: function getClassification() {\n      var _this3 = this;\n\n      ApiService.getClassification(this.props.instanceID).then(function (result) {\n        if (result.Type && result.Type.ClassName === 'Unknown') {\n          _this3.setProcessing(false);\n\n          _this3.props.history.push('/error/default');\n        } else {\n          if (result.PresentationChanged && _this3.props.sidesLeft === 2) {\n            _this3.props.setCardOrientation(1);\n\n            _this3.processClassification(result);\n          } else {\n            _this3.processClassification(result);\n          }\n        }\n      }).catch(function (err) {\n        _this3.setProcessing(false);\n\n        _this3.props.history.push('/error/default');\n\n        throw new Error(err);\n      });\n    }\n  }, {\n    key: \"dataURLToBlob\",\n    value: function dataURLToBlob(canvasDataURL) {\n      var binary = atob(canvasDataURL.split(',')[1]);\n      var array = [];\n\n      for (var i = 0; i < binary.length; i++) {\n        array.push(binary.charCodeAt(i));\n      }\n\n      return new Blob([new Uint8Array(array)], {\n        type: 'image/jpg'\n      });\n    }\n  }, {\n    key: \"retryPhoto\",\n    value: function retryPhoto() {\n      this.props.history.push('/capture/photo', {\n        isRetry: true\n      });\n    }\n  }, {\n    key: \"renderTitleText\",\n    value: function renderTitleText() {\n      var processedData = this.props.location.state;\n      if (processedData.blurry) return \"Image appears blurry. Please retry.\";\n      if (processedData.hasGlare) return \"Image has glare. Please retry.\";\n      return \"Ensure all texts are visible.\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var processedData = this.props.location.state;\n\n      if (this.state.processing) {\n        return React.createElement(Processing, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"body column capture_photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, processedData.blurry && React.createElement(\"div\", {\n        className: \"column description_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"idscango\",\n        className: \"icon\",\n        src: require('../assets/images/icon_attention@2x.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: 'description error',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.renderTitleText())), React.createElement(\"div\", {\n        className: \"row wrapper description_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, !processedData.blurry && React.createElement(\"p\", {\n        className: 'description',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.renderTitleText())), React.createElement(\"div\", {\n        className: \"capture_group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row wrapper capture_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, processedData.cardImage && React.createElement(\"img\", {\n        alt: 'idscango',\n        src: processedData.cardImage,\n        className: \"capture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"wrapper column capture_controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: 'btn',\n        onClick: function onClick() {\n          return _this4.proceedToNextStep();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'buttonBgText',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Continue with this image\")), !processedData.orientation && React.createElement(\"div\", {\n        className: 'btn outline',\n        onClick: function onClick() {\n          return _this4.retryPhoto();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'buttonBdText',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Retry\"))))));\n    }\n  }]);\n\n  return ProcessedImageResult;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    instanceID: state.config.instanceID,\n    orientation: state.idProperties.orientation,\n    cardType: state.idProperties.cardType,\n    sidesLeft: state.idProperties.sidesLeft,\n    frontSubmitted: state.config.frontSubmitted,\n    backSubmitted: state.config.backSubmitted\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    decrementSidesLeft: decrementSidesLeft,\n    incrementSidesLeft: incrementSidesLeft,\n    setCardOrientation: setCardOrientation\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcessedImageResult);","map":{"version":3,"sources":["C:\\SourceControl\\idscango-web\\src\\screens\\ProcessedImageResult.js"],"names":["React","Component","Fragment","Header","bindActionCreators","connect","decrementSidesLeft","incrementSidesLeft","setCardOrientation","ApiService","Processing","ProcessedImageResult","props","state","processing","processedData","location","sendImageToAPI","dataURLToBlob","cardImage","classificationData","setProcessing","PresentationChanged","Type","Size","cardType","sidesLeft","history","push","process","env","REACT_APP_FRM_ENABLED","value","setState","blobData","frontSubmitted","backSubmitted","replaceImage","instanceID","orientation","then","response","getClassification","processClassification","catch","err","pathname","retryLastStep","Error","postImage","result","ClassName","canvasDataURL","binary","atob","split","array","i","length","charCodeAt","Blob","Uint8Array","type","isRetry","blurry","hasGlare","require","renderTitleText","proceedToNextStep","retryPhoto","mapStateToProps","config","idProperties","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport Header from \"./Header\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {decrementSidesLeft, incrementSidesLeft, setCardOrientation} from \"./actions/idPropertiesActions\";\r\nimport ApiService from \"../services/api/api\";\r\nimport Processing from \"./Processing\";\r\n\r\nclass ProcessedImageResult extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            processing: false        \r\n        }\r\n    }\r\n\r\n    proceedToNextStep() {\r\n        let processedData = this.props.location.state;\r\n\r\n        this.sendImageToAPI(this.dataURLToBlob(processedData.cardImage));\r\n    }\r\n\r\n    processClassification(classificationData) {\r\n        let processedData = this.props.location.state;\r\n        processedData.classificationData = classificationData;\r\n        this.setProcessing(false);\r\n\r\n        if (processedData.classificationData && processedData.classificationData.PresentationChanged) {\r\n            this.props.setCardOrientation(0);\r\n        } else {\r\n            this.props.setCardOrientation(1);\r\n        }\r\n        if (processedData.classificationData && processedData.classificationData.Type.Size !== 3 || this.props.cardType === 2) {\r\n            this.props.decrementSidesLeft();\r\n\r\n            if (this.props.sidesLeft === 1) {\r\n                this.props.history.push('/capture/photo');\r\n            } else {\r\n                if (process.env.REACT_APP_FRM_ENABLED === 'true' && this.props.cardType === 1) {\r\n                    this.props.history.push('/capture/selfie')\r\n                } else {\r\n                    if (this.props.cardType === 1) {\r\n                        this.props.history.push('/results/default');\r\n                    }\r\n\r\n                    if (this.props.cardType === 2) {\r\n                        this.props.history.push('/results/medicard');\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (process.env.REACT_APP_FRM_ENABLED === 'true' && this.props.cardType === 1) {\r\n                this.props.history.push('/capture/selfie')\r\n            } else {\r\n                this.props.history.push('/results/default');\r\n            }\r\n        }\r\n    }\r\n\r\n    setProcessing(value){\r\n        this.setState({\r\n            processing:value\r\n        })\r\n    }\r\n\r\n    sendImageToAPI(blobData) {\r\n        this.setProcessing(true);\r\n\r\n        if ((this.props.frontSubmitted && this.props.sidesLeft === 2) || (this.props.backSubmitted && this.props.sidesLeft === 2) || (this.props.backSubmitted && this.props.frontSubmitted && this.props.sidesLeft === 1)) {\r\n            ApiService.replaceImage(this.props.instanceID, this.props.orientation, blobData)\r\n                .then(response => {\r\n                    if (this.props.cardType === 1) {\r\n                        this.getClassification();\r\n                    } else {\r\n                        this.processClassification(null);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.setProcessing(false);\r\n                    this.props.history.push({pathname: '/error/default', state: {retryLastStep: true}});\r\n                    throw new Error(err);\r\n                })\r\n        } else {\r\n            ApiService.postImage(this.props.instanceID, this.props.orientation, blobData)\r\n                .then(response => {\r\n                    if (this.props.cardType === 1) {\r\n                        this.getClassification();\r\n                    } else {\r\n                        this.processClassification(null);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.setProcessing(false);\r\n                    this.props.history.push({pathname: '/error/default', state: {retryLastStep: true}});\r\n                    throw new Error(err);\r\n                })\r\n        }\r\n    }\r\n\r\n    getClassification() {\r\n        ApiService.getClassification(this.props.instanceID)\r\n            .then(result => {\r\n                if (result.Type && result.Type.ClassName === 'Unknown') {\r\n                    this.setProcessing(false);\r\n                    this.props.history.push('/error/default');\r\n                } else {\r\n                    if (result.PresentationChanged && this.props.sidesLeft === 2) {\r\n                        this.props.setCardOrientation(1);\r\n                        this.processClassification(result);\r\n                    } else {\r\n                        this.processClassification(result);\r\n                    }\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                this.setProcessing(false);\r\n                this.props.history.push('/error/default');\r\n                throw new Error(err);\r\n            });\r\n    }\r\n\r\n    dataURLToBlob(canvasDataURL) {\r\n        let binary = atob(canvasDataURL.split(',')[1]);\r\n        let array = [];\r\n        for (let i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: 'image/jpg' });\r\n    }\r\n\r\n    retryPhoto() {\r\n        this.props.history.push('/capture/photo', {isRetry: true})\r\n    }\r\n\r\n    renderTitleText() {\r\n        let processedData = this.props.location.state;\r\n        if (processedData.blurry) return \"Image appears blurry. Please retry.\";\r\n        if (processedData.hasGlare) return \"Image has glare. Please retry.\";\r\n        return \"Ensure all texts are visible.\"\r\n    }\r\n\r\n\r\n    render() {\r\n        let processedData = this.props.location.state;\r\n        if (this.state.processing) {\r\n            return <Processing />\r\n        }\r\n        return (\r\n            <Fragment>\r\n\r\n                <Header />\r\n\r\n                <div className='body column capture_photo'>\r\n\r\n                    {processedData.blurry &&\r\n\r\n                        <div className='column description_container'>\r\n                            <img alt='idscango' className='icon' src={require('../assets/images/icon_attention@2x.png')} />\r\n                            <p className={'description error'}>{this.renderTitleText()}</p>\r\n                        </div>\r\n\r\n                    }\r\n\r\n                    <div className='row wrapper description_container'>\r\n                        {!processedData.blurry && <p className={'description'}>{this.renderTitleText()}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"capture_group\">\r\n\r\n                        <div className='row wrapper capture_container'>\r\n                            {processedData.cardImage && <img alt={'idscango'} src={processedData.cardImage} className='capture'/>}\r\n                        </div>\r\n\r\n                        <div className=\"wrapper column capture_controls\">\r\n\r\n                            <a className={'btn'} onClick={() => this.proceedToNextStep()}>\r\n                                <p className={'buttonBgText'}>Continue with this image</p>\r\n                            </a>\r\n                            {!processedData.orientation && <div className={'btn outline'} onClick={() => this.retryPhoto()}>\r\n                                <p className={'buttonBdText'}>Retry</p>\r\n                            </div>}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        instanceID: state.config.instanceID,\r\n        orientation: state.idProperties.orientation,\r\n        cardType: state.idProperties.cardType,\r\n        sidesLeft: state.idProperties.sidesLeft,\r\n        frontSubmitted: state.config.frontSubmitted,\r\n        backSubmitted: state.config.backSubmitted\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({decrementSidesLeft, incrementSidesLeft, setCardOrientation}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcessedImageResult);"]},"metadata":{},"sourceType":"module"}