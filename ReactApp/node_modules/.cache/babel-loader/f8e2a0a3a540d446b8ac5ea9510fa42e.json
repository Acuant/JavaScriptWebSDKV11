{"ast":null,"code":"import axios from 'axios';\n/*\r\n global window\r\n */\n\nvar client = function () {\n  return axios.create({\n    baseURL: process.env.REACT_APP_MEDICSCAN_ENDPOINT\n  });\n}();\n\nvar request = function request(options, store) {\n  var onSuccess = function onSuccess(response) {\n    console.debug('Request Successful!', response);\n    return response.data;\n  };\n\n  var onError = function onError(error) {\n    return Promise.reject(error.response || error.message);\n  };\n\n  if (process.env.NODE_ENV === 'development') {\n    var AUTH_TOKEN = btoa(\"\".concat(process.env.REACT_APP_USER_NAME, \":\").concat(process.env.REACT_APP_PASSWORD));\n    options.headers = {\n      \"Authorization\": \"Basic \".concat(AUTH_TOKEN),\n      'Accept': 'application/json;charset=utf-8',\n      'Content-Type': 'application/json;charset=utf-8'\n    };\n  } else {\n    options.headers = {\n      \"Authorization\": \"Basic \".concat(process.env.REACT_APP_AUTH_TOKEN),\n      'Accept': 'application/json;charset=utf-8',\n      'Content-Type': 'application/json;charset=utf-8'\n    };\n  }\n\n  return client(options).then(onSuccess).catch(onError);\n};\n\nexport default request;","map":{"version":3,"sources":["C:\\SourceControl\\idscango-web\\src\\services\\shared\\medicScan.js"],"names":["axios","client","create","baseURL","process","env","REACT_APP_MEDICSCAN_ENDPOINT","request","options","store","onSuccess","response","console","debug","data","onError","error","Promise","reject","message","NODE_ENV","AUTH_TOKEN","btoa","REACT_APP_USER_NAME","REACT_APP_PASSWORD","headers","REACT_APP_AUTH_TOKEN","then","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;;;;AAIA,IAAMC,MAAM,GAAI,YAAM;AAClB,SAAOD,KAAK,CAACE,MAAN,CAAa;AAChBC,IAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADL,GAAb,CAAP;AAGH,CAJc,EAAf;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAASC,OAAT,EAAkBC,KAAlB,EAAyB;AACrC,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAASC,QAAT,EAAmB;AACjCC,IAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd,EAAqCF,QAArC;AACA,WAAOA,QAAQ,CAACG,IAAhB;AACH,GAHD;;AAKA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAASC,KAAT,EAAgB;AAC5B,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAK,CAACL,QAAN,IAAkBK,KAAK,CAACG,OAAvC,CAAP;AACH,GAFD;;AAIA,MAAIf,OAAO,CAACC,GAAR,CAAYe,QAAZ,KAAyB,aAA7B,EAA4C;AACxC,QAAIC,UAAU,GAAGC,IAAI,WAAIlB,OAAO,CAACC,GAAR,CAAYkB,mBAAhB,cAAuCnB,OAAO,CAACC,GAAR,CAAYmB,kBAAnD,EAArB;AACAhB,IAAAA,OAAO,CAACiB,OAAR,GAAkB;AACd,uCAA0BJ,UAA1B,CADc;AAEd,gBAAU,gCAFI;AAGd,sBAAgB;AAHF,KAAlB;AAKH,GAPD,MAOO;AACHb,IAAAA,OAAO,CAACiB,OAAR,GAAkB;AACd,uCAA0BrB,OAAO,CAACC,GAAR,CAAYqB,oBAAtC,CADc;AAEd,gBAAU,gCAFI;AAGd,sBAAgB;AAHF,KAAlB;AAKH;;AAED,SAAOzB,MAAM,CAACO,OAAD,CAAN,CACFmB,IADE,CACGjB,SADH,EAEFkB,KAFE,CAEIb,OAFJ,CAAP;AAGH,CA5BD;;AA+BA,eAAeR,OAAf","sourcesContent":["import axios from 'axios'\r\n/*\r\n global window\r\n */\r\n\r\nconst client = (() => {\r\n    return axios.create({\r\n        baseURL: process.env.REACT_APP_MEDICSCAN_ENDPOINT\r\n    });\r\n})();\r\n\r\nconst request = function(options, store) {\r\n    const onSuccess = function(response) {\r\n        console.debug('Request Successful!', response);\r\n        return response.data;\r\n    };\r\n\r\n    const onError = function(error) {\r\n        return Promise.reject(error.response || error.message);\r\n    };\r\n\r\n    if (process.env.NODE_ENV === 'development') {\r\n        let AUTH_TOKEN = btoa(`${process.env.REACT_APP_USER_NAME}:${process.env.REACT_APP_PASSWORD}`);\r\n        options.headers = {\r\n            \"Authorization\": `Basic ${AUTH_TOKEN}`,\r\n            'Accept': 'application/json;charset=utf-8',\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n        };\r\n    } else {\r\n        options.headers = {\r\n            \"Authorization\": `Basic ${process.env.REACT_APP_AUTH_TOKEN}`,\r\n            'Accept': 'application/json;charset=utf-8',\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n        };\r\n    }\r\n\r\n    return client(options)\r\n        .then(onSuccess)\r\n        .catch(onError);\r\n};\r\n\r\n\r\nexport default request;\r\n"]},"metadata":{},"sourceType":"module"}