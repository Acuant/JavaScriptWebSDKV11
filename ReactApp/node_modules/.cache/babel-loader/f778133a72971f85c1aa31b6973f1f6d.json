{"ast":null,"code":"import request from '../shared/request';\n\nfunction getDocInstance() {\n  return request({\n    url: '/AssureIDService/Document/Instance',\n    method: \"POST\",\n    data: {\n      \"AuthenticationSensitivity\": 0,\n      \"ClassificationMode\": 0,\n      \"Device\": {\n        \"HasContactlessChipReader\": false,\n        \"HasMagneticStripeReader\": false,\n        \"SerialNumber\": \"STRICT\",\n        \"Type\": {\n          \"Manufacturer\": \"xxx\",\n          \"Model\": \"xxx\",\n          \"SensorType\": 3\n        }\n      },\n      \"ImageCroppingExpectedSize\": 0,\n      \"ImageCroppingMode\": 1,\n      \"ManualDocumentType\": null,\n      \"ProcessMode\": 0,\n      \"SubscriptionId\": process.env.REACT_APP_SUBSCRIPTION_ID\n    }\n  });\n}\n\nfunction postImage(instanceID, side, file) {\n  return request({\n    url: \"/AssureIDService/Document/\".concat(instanceID, \"/Image?side=\").concat(side, \"&light=0&metrics=true\"),\n    method: 'POST',\n    data: file\n  });\n}\n\nfunction replaceImage(instanceID, side, file) {\n  return request({\n    url: \"/AssureIDService/Document/\".concat(instanceID, \"/Image?side=\").concat(side, \"&light=0&metrics=true\"),\n    method: 'PUT',\n    data: file\n  });\n}\n\nfunction postFrontImage(instanceID, file) {\n  return request({\n    url: '/AssureIDService/Document/' + instanceID + '/Image?side=0&light=0&metrics=true',\n    method: 'POST',\n    data: file\n  });\n}\n\nfunction getClassification(instanceID) {\n  return request({\n    url: '/AssureIDService/Document/' + instanceID + '/Classification',\n    method: 'GET'\n  });\n}\n\nfunction postBackImage(instanceID, file) {\n  return request({\n    url: '/AssureIDService/Document/' + instanceID + '/Image?side=1&light=0&metrics=true',\n    method: 'POST',\n    data: file\n  });\n}\n\nfunction getImage(instanceID, side) {\n  return request({\n    url: '/AssureIDService/Document/' + instanceID + '/Image?side=' + side + '&light=0',\n    method: 'GET',\n    responseType: 'arraybuffer'\n  });\n}\n\nfunction getImageQualityMetric(instanceID, side) {\n  return request({\n    url: '/AssureIDService/Document/' + instanceID + '/Image/Metrics?side=' + side + '&light=0',\n    method: 'GET'\n  });\n}\n\nfunction getFaceImage(instanceID) {\n  return request({\n    url: '/AssureIDService/Document/' + instanceID + '/Field/Image?key=Photo',\n    method: 'GET',\n    responseType: 'arraybuffer'\n  });\n}\n\nfunction getSignatureImage(instanceID) {\n  return request({\n    url: '/AssureIDService/Document/' + instanceID + '/Field/Image?key=Signature',\n    method: 'GET',\n    responseType: 'arraybuffer'\n  });\n}\n/**\r\n * TODO!!!!\r\n * instance id will fail if you already called this !!!\r\n * @param instanceID\r\n * @returns {*}\r\n */\n\n\nfunction getResults(instanceID) {\n  return request({\n    url: '/AssureIDService/Document/' + instanceID,\n    method: 'GET'\n  });\n}\n\nvar ApiService = {\n  getDocInstance: getDocInstance,\n  postFrontImage: postFrontImage,\n  getClassification: getClassification,\n  getImage: getImage,\n  postBackImage: postBackImage,\n  getImageQualityMetric: getImageQualityMetric,\n  getFaceImage: getFaceImage,\n  getResults: getResults,\n  getSignatureImage: getSignatureImage,\n  postImage: postImage,\n  replaceImage: replaceImage\n};\nexport default ApiService;","map":{"version":3,"sources":["C:\\SourceControl\\idscango-web\\src\\services\\api\\api.js"],"names":["request","getDocInstance","url","method","data","process","env","REACT_APP_SUBSCRIPTION_ID","postImage","instanceID","side","file","replaceImage","postFrontImage","getClassification","postBackImage","getImage","responseType","getImageQualityMetric","getFaceImage","getSignatureImage","getResults","ApiService"],"mappings":"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","sourcesContent":["import request from '../shared/request';\r\n\r\nfunction getDocInstance() {\r\n    return request({\r\n        url: '/AssureIDService/Document/Instance',\r\n        method: \"POST\",\r\n        data: {\r\n            \"AuthenticationSensitivity\": 0,\r\n            \"ClassificationMode\": 0,\r\n            \"Device\": {\r\n                \"HasContactlessChipReader\": false,\r\n                \"HasMagneticStripeReader\": false,\r\n                \"SerialNumber\": \"STRICT\",\r\n                \"Type\": {\r\n                    \"Manufacturer\": \"xxx\",\r\n                    \"Model\": \"xxx\",\r\n                    \"SensorType\": 3,\r\n                }\r\n            },\r\n            \"ImageCroppingExpectedSize\": 0,\r\n            \"ImageCroppingMode\": 1,\r\n            \"ManualDocumentType\": null,\r\n            \"ProcessMode\": 0,\r\n            \"SubscriptionId\": process.env.REACT_APP_SUBSCRIPTION_ID\r\n        }\r\n    });\r\n}\r\n\r\nfunction postImage(instanceID, side, file) {\r\n    return request({\r\n        url: `/AssureIDService/Document/${instanceID}/Image?side=${side}&light=0&metrics=true`,\r\n        method: 'POST',\r\n        data: file\r\n    })\r\n}\r\n\r\nfunction replaceImage(instanceID, side, file) {\r\n    return request({\r\n        url: `/AssureIDService/Document/${instanceID}/Image?side=${side}&light=0&metrics=true`,\r\n        method: 'PUT',\r\n        data: file\r\n    })\r\n}\r\n\r\nfunction postFrontImage(instanceID, file) {\r\n    return request({\r\n        url: '/AssureIDService/Document/' + instanceID + '/Image?side=0&light=0&metrics=true',\r\n        method: 'POST',\r\n        data: file\r\n    });\r\n}\r\n\r\nfunction getClassification(instanceID){\r\n    return request({\r\n        url: '/AssureIDService/Document/' + instanceID + '/Classification',\r\n        method: 'GET',\r\n    });\r\n}\r\n\r\nfunction postBackImage(instanceID, file) {\r\n    return request({\r\n        url: '/AssureIDService/Document/' + instanceID + '/Image?side=1&light=0&metrics=true',\r\n        method: 'POST',\r\n        data: file\r\n    });\r\n}\r\n\r\nfunction getImage(instanceID, side) {\r\n    return request({\r\n        url: '/AssureIDService/Document/' + instanceID + '/Image?side='+side+'&light=0',\r\n        method: 'GET',\r\n        responseType: 'arraybuffer'\r\n    });\r\n}\r\n\r\nfunction getImageQualityMetric(instanceID,side) {\r\n    return request({\r\n        url: '/AssureIDService/Document/' + instanceID + '/Image/Metrics?side='+side+'&light=0',\r\n        method: 'GET',\r\n    });\r\n}\r\n\r\nfunction getFaceImage(instanceID) {\r\n    return request({\r\n        url: '/AssureIDService/Document/' + instanceID + '/Field/Image?key=Photo',\r\n        method: 'GET',\r\n        responseType: 'arraybuffer'\r\n    });\r\n}\r\n\r\nfunction getSignatureImage(instanceID) {\r\n    return request({\r\n        url: '/AssureIDService/Document/' + instanceID + '/Field/Image?key=Signature',\r\n        method: 'GET',\r\n        responseType: 'arraybuffer'\r\n    });\r\n}\r\n\r\n/**\r\n * TODO!!!!\r\n * instance id will fail if you already called this !!!\r\n * @param instanceID\r\n * @returns {*}\r\n */\r\nfunction getResults(instanceID) {\r\n    return request({\r\n        url: '/AssureIDService/Document/' + instanceID,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\n\r\nconst ApiService = {\r\n    getDocInstance,\r\n    postFrontImage,\r\n    getClassification,\r\n    getImage,\r\n    postBackImage,\r\n    getImageQualityMetric,\r\n    getFaceImage,\r\n    getResults,\r\n    getSignatureImage,\r\n    postImage,\r\n    replaceImage\r\n};\r\n\r\nexport default ApiService;"]},"metadata":{},"sourceType":"module"}