{"ast":null,"code":"import _objectSpread from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\SourceControl\\\\idscango-web\\\\src\\\\screens\\\\Results\\\\IDPassport.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport Processing from \"./../Processing\";\nimport { bindActionCreators } from \"redux\";\nimport { processID } from './../actions/processDataActions';\nimport { resetProcessedData } from \"../actions/processDataActions\";\nimport { resetConfig } from \"../actions/configActions\";\nimport { resetIDProperties } from \"../actions/idPropertiesActions\";\nimport Header from \"../Header\";\n\nvar IDPassport =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IDPassport, _Component);\n\n  function IDPassport(props) {\n    var _this;\n\n    _classCallCheck(this, IDPassport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IDPassport).call(this, props));\n    _this.state = {\n      loading: false,\n      fields: {}\n    };\n    return _this;\n  }\n\n  _createClass(IDPassport, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (process.env.REACT_APP_FRM_ENABLED === 'false') {\n        var instanceID = this.props.instanceID;\n        this.props.processID(instanceID);\n      }\n    }\n  }, {\n    key: \"processDate\",\n    value: function processDate(date) {\n      date = date.replace(\"Date\", \"\");\n      date = date.replace(\")\", \"\");\n      date = date.replace(\"(\", \"\");\n      date = date.split(\"/\").join(\"\");\n      date = date.split(\"+\")[0];\n      return parseInt(date);\n    }\n  }, {\n    key: \"resetStoreAndRedirect\",\n    value: function resetStoreAndRedirect() {\n      this.props.resetConfig();\n      this.props.resetIDProperties();\n      this.props.resetProcessedData();\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.props.resultData) {\n        return React.createElement(Processing, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), this.props.resultData && React.createElement(\"div\", {\n        className: \"body column results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row results_id_sig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"figure\", {\n        className: \"results_id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.props.resultData['Photo'].length > 0 && React.createElement(\"img\", {\n        alt: \"idscango\",\n        className: 'profile',\n        src: this.props.resultData['Photo'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"figure\", {\n        className: \"results_sig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.resultData['Signature'].length > 0 && React.createElement(\"img\", {\n        alt: \"idscango\",\n        className: 'signature',\n        src: this.props.resultData['Signature'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"results_data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.props.resultData['Full Name'] && React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"div\", {\n        className: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.props.resultData['Full Name'])), this.props.resultData.Authentication && React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Document Authentication\"), React.createElement(\"div\", {\n        className: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.props.resultData.Authentication)), this.props.faceMatch !== null && React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Facial Score\"), React.createElement(\"div\", {\n        className: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.props.faceMatch)), this.props.resultData['Document Number'] && React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"License No.\"), React.createElement(\"div\", {\n        className: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.props.resultData['Document Number'])), this.props.resultData['Address'] && React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"div\", {\n        className: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.props.resultData['Address'].replace(/[\\u2028]/g, ' '))), this.props.resultData['Birth Date'] && React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Date of Birth\"), React.createElement(\"div\", {\n        className: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, moment(this.processDate(this.props.resultData['Birth Date'])).utc().format(\"MM-DD-YYYY\"))), this.props.resultData['Expiration Date'] && React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Expiration Date\"), React.createElement(\"div\", {\n        className: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, moment(this.processDate(this.props.resultData['Expiration Date'])).utc().format(\"MM-DD-YYYY\"))), this.props.resultData['Issue Date'] && React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Issue Date\"), React.createElement(\"div\", {\n        className: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, moment(this.processDate(this.props.resultData['Issue Date'])).utc().format(\"MM-DD-YYYY\")))), React.createElement(\"a\", {\n        className: \"btn outline\",\n        onClick: function onClick() {\n          return _this2.resetStoreAndRedirect();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'buttonBgText',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Home\")))));\n    }\n  }]);\n\n  return IDPassport;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    instanceID: state.config.instanceID,\n    faceMatch: state.processedData.faceMatch,\n    resultData: state.processedData.result,\n    cardType: state.idProperties.cardType\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  var actions = bindActionCreators({\n    processID: processID,\n    resetProcessedData: resetProcessedData,\n    resetConfig: resetConfig,\n    resetIDProperties: resetIDProperties\n  }, dispatch);\n  return _objectSpread({}, actions, {\n    dispatch: dispatch\n  });\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IDPassport);","map":{"version":3,"sources":["C:\\SourceControl\\idscango-web\\src\\screens\\Results\\IDPassport.js"],"names":["React","Component","Fragment","Redirect","moment","connect","Processing","bindActionCreators","processID","resetProcessedData","resetConfig","resetIDProperties","Header","IDPassport","props","state","loading","fields","process","env","REACT_APP_FRM_ENABLED","instanceID","date","replace","split","join","parseInt","history","push","resultData","length","Authentication","faceMatch","processDate","utc","format","resetStoreAndRedirect","mapStateToProps","config","processedData","result","cardType","idProperties","mapDispatchToProps","dispatch","actions"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport {connect} from \"react-redux\";\r\nimport Processing from \"./../Processing\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {processID} from './../actions/processDataActions';\r\nimport {resetProcessedData} from \"../actions/processDataActions\";\r\nimport {resetConfig} from \"../actions/configActions\";\r\nimport {resetIDProperties} from \"../actions/idPropertiesActions\";\r\nimport Header from \"../Header\";\r\n\r\nclass IDPassport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            fields: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (process.env.REACT_APP_FRM_ENABLED === 'false') {\r\n            let {instanceID} = this.props;\r\n            this.props.processID(instanceID);\r\n        }\r\n    }\r\n\r\n    processDate(date) {\r\n        date = date.replace(\"Date\", \"\");\r\n        date = date.replace(\")\", \"\");\r\n        date = date.replace(\"(\", \"\");\r\n        date = date.split(\"/\").join(\"\");\r\n        date = date.split(\"+\")[0];\r\n        return parseInt(date);\r\n    }\r\n\r\n    resetStoreAndRedirect() {\r\n        this.props.resetConfig();\r\n        this.props.resetIDProperties();\r\n        this.props.resetProcessedData();\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.resultData) {\r\n            return <Processing/>\r\n        }\r\n        return (\r\n            <Fragment>\r\n\r\n                <Header/>\r\n\r\n                {this.props.resultData &&\r\n\r\n                <div className='body column results'>\r\n\r\n                    <div className='wrapper'>\r\n\r\n                        <div className='row results_id_sig'>\r\n\r\n                            <figure className='results_id'>\r\n                                {this.props.resultData['Photo'].length > 0 && <img alt='idscango' className={'profile'} src={this.props.resultData['Photo']}/>}\r\n                            </figure>\r\n\r\n                            <figure className='results_sig'>\r\n                                {this.props.resultData['Signature'].length > 0 && <img alt='idscango' className={'signature'} src={this.props.resultData['Signature']}/>}\r\n                            </figure>\r\n\r\n                        </div>\r\n\r\n                        <div className='results_data'>\r\n\r\n                                {this.props.resultData['Full Name'] &&\r\n                                <div className='row'>\r\n                                    <div className='type'>Name</div>\r\n                                    <div className='data'>{this.props.resultData['Full Name']}</div>\r\n                                </div>\r\n                                }\r\n                                {this.props.resultData.Authentication &&\r\n                                <div className='row'>\r\n                                    <div className='type'>Document Authentication</div>\r\n                                    <div className='data'>{this.props.resultData.Authentication}</div>\r\n                                </div>\r\n                                }\r\n                                {this.props.faceMatch !== null &&\r\n                                <div className='row'>\r\n                                    <div className='type'>Facial Score</div>\r\n                                    <div className='data'>{this.props.faceMatch}</div>\r\n                                </div>\r\n                                }\r\n                                {this.props.resultData['Document Number'] &&\r\n                                <div className='row'>\r\n                                    <div className='type'>License No.</div>\r\n                                    <div className='data'>{this.props.resultData['Document Number']}</div>\r\n                                </div>\r\n                                }\r\n                                {this.props.resultData['Address'] &&\r\n                                <div className='row'>\r\n                                    <div className='type'>Address</div>\r\n                                    <div className='data'>{this.props.resultData['Address'].replace(/[\\u2028]/g,' ')}</div>\r\n                                </div>\r\n                                }\r\n                                {this.props.resultData['Birth Date'] &&\r\n                                <div className='row'>\r\n                                    <div className='type'>Date of Birth</div>\r\n                                    <div className='data'>\r\n                                        {moment(this.processDate(this.props.resultData['Birth Date'])).utc().format(\"MM-DD-YYYY\")}\r\n                                    </div>\r\n                                </div>\r\n                                }\r\n                                {this.props.resultData['Expiration Date'] &&\r\n                                <div className='row'>\r\n                                    <div className='type'>Expiration Date</div>\r\n                                    <div className='data'>\r\n                                        {moment(this.processDate(this.props.resultData['Expiration Date'])).utc().format(\"MM-DD-YYYY\")}\r\n                                    </div>\r\n                                </div>\r\n                                }\r\n                                {this.props.resultData['Issue Date'] &&\r\n                                <div className='row'>\r\n                                    <div className='type'>Issue Date</div>\r\n                                    <div className='data'>\r\n                                        {moment(this.processDate(this.props.resultData['Issue Date'])).utc().format(\"MM-DD-YYYY\")}\r\n                                    </div>\r\n                                </div>\r\n                                }\r\n\r\n                        </div>\r\n\r\n                        <a className='btn outline' onClick={() => this.resetStoreAndRedirect()}>\r\n                            <p className={'buttonBgText'}>Home</p>\r\n                        </a>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                }\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        instanceID: state.config.instanceID,\r\n        faceMatch: state.processedData.faceMatch,\r\n        resultData: state.processedData.result,\r\n        cardType: state.idProperties.cardType\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    let actions = bindActionCreators({processID, resetProcessedData, resetConfig, resetIDProperties}, dispatch);\r\n    return {...actions, dispatch};\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IDPassport);"]},"metadata":{},"sourceType":"module"}