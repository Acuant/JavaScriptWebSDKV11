{"ast":null,"code":"import storage from \"redux-persist/es/storage\";\nimport thunk from 'redux-thunk';\nimport createHistory from 'history/createBrowserHistory';\nimport { persistCombineReducers, persistStore } from \"redux-persist\";\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducer';\n\nvar loggerMiddleWare = function loggerMiddleWare(store) {\n  return function (next) {\n    return function (action) {\n      console.log(\"[LOG] Action triggered\", action);\n      next(action);\n    };\n  };\n};\n/**\r\n * cardType: 1 for ID/Passport, 2 for Medicard\r\n */\n\n\nvar initialState = {\n  config: {\n    instanceID: null,\n    frontSubmitted: false,\n    backSubmitted: false\n  },\n  processedData: {\n    faceMatch: null,\n    result: null\n  },\n  idProperties: {\n    cardType: 0,\n    orientation: 0,\n    sidesLeft: 2\n  }\n};\nexport var history = createHistory({\n  basename: process.env.REACT_APP_BASENAME\n});\nvar config = {\n  key: 'idscango',\n  storage: storage,\n  blacklist: ['config', 'processedData', 'idProperties']\n};\nvar reducer = persistCombineReducers(config, rootReducer);\n\nfunction configureStore() {\n  var store = createStore(connectRouter(history)(reducer), initialState, applyMiddleware(thunk, loggerMiddleWare, routerMiddleware(history)));\n  var persistor = persistStore(store);\n  return {\n    persistor: persistor,\n    store: store\n  };\n}\n\nvar _configureStore = configureStore(),\n    persistor = _configureStore.persistor,\n    store = _configureStore.store;\n\nexport { persistor, store };","map":{"version":3,"sources":["C:\\SourceControl\\idscango-web\\src\\store.js"],"names":["storage","thunk","createHistory","persistCombineReducers","persistStore","connectRouter","routerMiddleware","createStore","applyMiddleware","rootReducer","loggerMiddleWare","store","next","action","console","log","initialState","config","instanceID","frontSubmitted","backSubmitted","processedData","faceMatch","result","idProperties","cardType","orientation","sidesLeft","history","basename","process","env","REACT_APP_BASENAME","key","blacklist","reducer","configureStore","persistor"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAAQC,sBAAR,EAAgCC,YAAhC,QAAmD,eAAnD;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AACA,SAAQC,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK;AAAA,SAAI,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AAChDC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,MAAtC;AACAD,MAAAA,IAAI,CAACC,MAAD,CAAJ;AACH,KAHqC;AAAA,GAAR;AAAA,CAA9B;AAKA;;;;;AAGA,IAAMG,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAE,IADR;AAEJC,IAAAA,cAAc,EAAE,KAFZ;AAGJC,IAAAA,aAAa,EAAE;AAHX,GADS;AAMjBC,EAAAA,aAAa,EAAE;AACXC,IAAAA,SAAS,EAAE,IADA;AAEXC,IAAAA,MAAM,EAAE;AAFG,GANE;AAUjBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,CADA;AAEVC,IAAAA,WAAW,EAAE,CAFH;AAGVC,IAAAA,SAAS,EAAE;AAHD;AAVG,CAArB;AAiBA,OAAO,IAAMC,OAAO,GAAG1B,aAAa,CAAC;AAAC2B,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAvB,CAAD,CAA7B;AAEP,IAAMf,MAAM,GAAG;AACXgB,EAAAA,GAAG,EAAE,UADM;AAEXjC,EAAAA,OAAO,EAAPA,OAFW;AAGXkC,EAAAA,SAAS,EAAE,CAAC,QAAD,EAAW,eAAX,EAA4B,cAA5B;AAHA,CAAf;AAMA,IAAMC,OAAO,GAAGhC,sBAAsB,CAACc,MAAD,EAASR,WAAT,CAAtC;;AAEA,SAAS2B,cAAT,GAA0B;AACtB,MAAIzB,KAAK,GAAGJ,WAAW,CACnBF,aAAa,CAACuB,OAAD,CAAb,CAAuBO,OAAvB,CADmB,EAEnBnB,YAFmB,EAGnBR,eAAe,CAACP,KAAD,EAAQS,gBAAR,EAA0BJ,gBAAgB,CAACsB,OAAD,CAA1C,CAHI,CAAvB;AAKA,MAAIS,SAAS,GAAGjC,YAAY,CAACO,KAAD,CAA5B;AACA,SAAO;AAAC0B,IAAAA,SAAS,EAATA,SAAD;AAAY1B,IAAAA,KAAK,EAALA;AAAZ,GAAP;AACH;;sBAEiCyB,cAAc,E;IAAlCC,S,mBAAAA,S;IAAW1B,K,mBAAAA,K","sourcesContent":["import storage from \"redux-persist/es/storage\";\r\nimport thunk from 'redux-thunk';\r\nimport createHistory from 'history/createBrowserHistory';\r\nimport {persistCombineReducers, persistStore} from \"redux-persist\";\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport rootReducer from './rootReducer'\r\n\r\nconst loggerMiddleWare = store => next => action => {\r\n    console.log(\"[LOG] Action triggered\", action);\r\n    next(action);\r\n};\r\n\r\n/**\r\n * cardType: 1 for ID/Passport, 2 for Medicard\r\n */\r\nconst initialState = {\r\n    config: {\r\n        instanceID: null,\r\n        frontSubmitted: false,\r\n        backSubmitted: false\r\n    },\r\n    processedData: {\r\n        faceMatch: null,\r\n        result: null\r\n    },\r\n    idProperties: {\r\n        cardType: 0,\r\n        orientation: 0,\r\n        sidesLeft: 2\r\n    }\r\n};\r\n\r\nexport const history = createHistory({basename: process.env.REACT_APP_BASENAME});\r\n\r\nconst config = {\r\n    key: 'idscango',\r\n    storage,\r\n    blacklist: ['config', 'processedData', 'idProperties']\r\n};\r\n\r\nconst reducer = persistCombineReducers(config, rootReducer);\r\n\r\nfunction configureStore() {\r\n    let store = createStore(\r\n        connectRouter(history)(reducer),\r\n        initialState,\r\n        applyMiddleware(thunk, loggerMiddleWare, routerMiddleware(history))\r\n    );\r\n    let persistor = persistStore(store);\r\n    return {persistor, store};\r\n}\r\n\r\nexport const {persistor, store} = configureStore();"]},"metadata":{},"sourceType":"module"}