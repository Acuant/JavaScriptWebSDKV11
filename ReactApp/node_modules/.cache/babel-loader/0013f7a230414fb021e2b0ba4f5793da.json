{"ast":null,"code":"import _classCallCheck from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\SourceControl\\\\idscango-web\\\\src\\\\screens\\\\CapturePhoto.js\";\nimport React, { Component, Fragment } from 'react';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport Header from \"./Header\";\nimport { decrementSidesLeft, setCardOrientation, setCardType } from \"./actions/idPropertiesActions\";\nimport { setInstanceID, submitBackID, submitFrontID } from \"./actions/configActions\";\nimport ApiService from \"../services/api/api\";\nimport Processing from \"./Processing\";\n\nvar CapturePhoto =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CapturePhoto, _Component);\n\n  function CapturePhoto(props) {\n    var _this;\n\n    _classCallCheck(this, CapturePhoto);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CapturePhoto).call(this, props));\n    _this.state = {\n      inputValue: null,\n      processing: false\n    };\n    _this.textInput = React.createRef();\n    return _this;\n  }\n\n  _createClass(CapturePhoto, [{\n    key: \"getImageAndQualityMetrics\",\n    value: function getImageAndQualityMetrics(classificationData) {\n      var _this2 = this;\n\n      Promise.all([ApiService.getImage(this.props.instanceID, this.props.orientation), ApiService.getImageQualityMetric(this.props.instanceID, this.props.orientation)]).then(function (response) {\n        var imageResponse = response[0],\n            imageQualityResponse = response[1],\n            blurry = false,\n            hasGlare = false,\n            self = _this2;\n\n        if (imageQualityResponse.HorizontalResolution < 300 || imageQualityResponse.VerticalResolution < 300) {\n          if (imageQualityResponse.Side === 0) {\n            self.props.submitFrontID();\n          }\n\n          if (imageQualityResponse.Side === 1) {\n            self.props.submitBackID();\n          }\n\n          _this2.props.history.push({\n            pathname: '/error/lowresolution',\n            state: {\n              retryLastStep: true\n            }\n          });\n\n          return;\n        }\n\n        var arr = new Uint8Array(imageResponse);\n        var raw = '';\n        var subArray,\n            chunk = 5000;\n\n        for (var i = 0, j = arr.length; i < j; i += chunk) {\n          subArray = arr.subarray(i, i + chunk);\n          raw += String.fromCharCode.apply(null, subArray);\n        }\n\n        var base64FrontReformattedImage = btoa(raw);\n        var image = new Image();\n        image.src = \"data:image/jpeg;base64,\".concat(base64FrontReformattedImage);\n        new Promise(function (resolve, reject) {\n          image.onload = function () {\n            var width, height;\n\n            if (image.height > image.width) {\n              width = image.height;\n              height = image.width;\n            } else {\n              width = image.width;\n              height = image.height;\n            }\n\n            var aspectRatio = width / height;\n\n            if (aspectRatio < 1.4 || aspectRatio > 1.66) {\n              if (imageQualityResponse.Side === 0) {\n                self.props.submitFrontID();\n              }\n\n              if (imageQualityResponse.Side === 1) {\n                self.props.submitBackID();\n              }\n\n              return self.props.history.push({\n                pathname: '/error/default',\n                state: {\n                  retryLastStep: true\n                }\n              });\n            } else {\n              if (imageQualityResponse.Side === 0) {\n                self.props.submitFrontID();\n              }\n\n              if (imageQualityResponse.Side === 1) {\n                self.props.submitBackID();\n              }\n\n              resolve();\n            }\n          };\n        }).then(function () {\n          if (imageQualityResponse.SharpnessMetric < 50 && process.env.REACT_APP_SHARPNESS_METRIC_ENABLED === 'true') {\n            blurry = true;\n          }\n\n          if (imageQualityResponse.GlareMetric < 50 && process.env.REACT_APP_GLARE_METRIC_ENABLED === 'true') {\n            hasGlare = true;\n          }\n\n          _this2.props.decrementSidesLeft();\n\n          _this2.props.history.push('/photo/confirm', {\n            blurry: blurry,\n            hasGlare: hasGlare,\n            classificationData: classificationData,\n            cardImage: \"data:image/jpeg;base64,\".concat(base64FrontReformattedImage)\n          });\n        });\n      }).catch(function (error) {\n        _this2.props.history.push('/error/default');\n      });\n    }\n  }, {\n    key: \"getClassification\",\n    value: function getClassification() {\n      var _this3 = this;\n\n      ApiService.getClassification(this.props.instanceID).then(function (result) {\n        if (result.Type && result.Type.ClassName === 'Unknown') {\n          _this3.props.history.push('/error/default');\n        } else {\n          if (result.PresentationChanged && _this3.props.sidesLeft === 2) {\n            _this3.props.setCardOrientation(1);\n\n            _this3.getImageAndQualityMetrics(result);\n          } else {\n            _this3.getImageAndQualityMetrics(result);\n          }\n        }\n      }).catch(function (err) {\n        _this3.props.history.push('/error/default');\n\n        throw new Error(err);\n      });\n    }\n  }, {\n    key: \"dataURLToBlob\",\n    value: function dataURLToBlob(canvasDataURL) {\n      var binary = atob(canvasDataURL.split(',')[1]);\n      var array = [];\n\n      for (var i = 0; i < binary.length; i++) {\n        array.push(binary.charCodeAt(i));\n      }\n\n      return new Blob([new Uint8Array(array)], {\n        type: 'image/jpg'\n      });\n    }\n  }, {\n    key: \"sendImageToAPI\",\n    value: function sendImageToAPI(blobData) {\n      var _this4 = this;\n\n      if (this.props.frontSubmitted && this.props.sidesLeft === 2 || this.props.backSubmitted && this.props.sidesLeft === 2 || this.props.backSubmitted && this.props.frontSubmitted && this.props.sidesLeft === 1) {\n        ApiService.replaceImage(this.props.instanceID, this.props.orientation, blobData).then(function (response) {\n          if (_this4.props.cardType === 1) {\n            _this4.getClassification();\n          } else {\n            _this4.getImageAndQualityMetrics(null);\n          }\n        }).catch(function (err) {\n          _this4.props.history.push({\n            pathname: '/error/default',\n            state: {\n              retryLastStep: true\n            }\n          });\n\n          throw new Error(err);\n        });\n      } else {\n        ApiService.postImage(this.props.instanceID, this.props.orientation, blobData).then(function (response) {\n          if (_this4.props.cardType === 1) {\n            _this4.getClassification();\n          } else {\n            _this4.getImageAndQualityMetrics(null);\n          }\n        }).catch(function (err) {\n          _this4.props.history.push({\n            pathname: '/error/default',\n            state: {\n              retryLastStep: true\n            }\n          });\n\n          throw new Error(err);\n        });\n      }\n    }\n  }, {\n    key: \"isIEorEDGE\",\n    value: function isIEorEDGE() {\n      return navigator.appName === 'Microsoft Internet Explorer' || navigator.appName === \"Netscape\" && navigator.appVersion.indexOf('Edge') > -1;\n    }\n  }, {\n    key: \"processImage\",\n    value: function processImage(event) {\n      var _this5 = this;\n\n      var file = event.target,\n          reader = new FileReader();\n      this.setState({\n        processing: true\n      });\n\n      if (!file) {\n        this.setState({\n          processing: false\n        });\n        return;\n      }\n\n      window.scrollTo(0, 0);\n\n      if (this.isIEorEDGE()) {\n        this.sendImageToAPI(file.files[0]);\n        return;\n      }\n\n      reader.onload = function (e) {\n        if (window.File && window.FileReader && window.FileList && window.Blob) {\n          var image = document.createElement('img');\n          image.src = e.target.result;\n\n          image.onload = function () {\n            var canvas = document.createElement('canvas'),\n                context = canvas.getContext('2d'),\n                MAX_WIDTH = 3032,\n                MAX_HEIGHT = 2008,\n                width = image.width,\n                height = image.height; //   context.drawImage(image, 0, 0);\n\n            var largerDimension = width > height ? width : height;\n\n            if (largerDimension > MAX_WIDTH) {\n              if (width < height) {\n                var aspectRatio = height / width;\n                MAX_HEIGHT = MAX_WIDTH;\n                MAX_WIDTH = MAX_HEIGHT / aspectRatio;\n              } else {\n                var aspectRatio = width / height;\n                MAX_HEIGHT = MAX_WIDTH / aspectRatio;\n              }\n            } else {\n              MAX_WIDTH = image.width;\n              MAX_HEIGHT = image.height;\n            }\n\n            canvas.width = MAX_WIDTH;\n            canvas.height = MAX_HEIGHT;\n            context = canvas.getContext('2d');\n            context.mozImageSmoothingEnabled = false;\n            context.webkitImageSmoothingEnabled = false;\n            context.msImageSmoothingEnabled = false;\n            context.imageSmoothingEnabled = false;\n            context.drawImage(image, 0, 0, MAX_WIDTH, MAX_HEIGHT);\n            var canvasToDataURL = canvas.toDataURL(file.files[0].type, 90 * .01);\n\n            var blobData = _this5.dataURLToBlob(canvasToDataURL);\n\n            _this5.sendImageToAPI(blobData);\n          };\n        }\n      };\n\n      reader.readAsDataURL(file.files[0]);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.instanceID) {\n        this.props.setInstanceID();\n      }\n\n      if (this.props.location && this.props.location.state) {\n        if (this.props.location.state.isRetry) {\n          this.textInput.current.click();\n        }\n      }\n    }\n  }, {\n    key: \"getOrientationCopy\",\n    value: function getOrientationCopy() {\n      return this.props.orientation === 0 ? 'front' : 'back';\n    }\n  }, {\n    key: \"getCardTypeCopy\",\n    value: function getCardTypeCopy() {\n      switch (this.props.cardType) {\n        case 1:\n          return 'ID card';\n\n        case 2:\n          return 'medical card';\n\n        default:\n          return 'ID card';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      if (this.state.processing) {\n        return React.createElement(Processing, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"body column capture_photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row wrapper description_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Upload a clear picture of the \", this.getOrientationCopy(), \" of your \", this.getCardTypeCopy(), \".\")), React.createElement(\"div\", {\n        className: \"capture_group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row wrapper capture_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, this.props.sidesLeft === 2 && React.createElement(\"img\", {\n        alt: \"idscango\",\n        className: 'capture',\n        src: require('../assets/video/scan_process.gif'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), this.props.sidesLeft === 1 && React.createElement(\"img\", {\n        alt: \"idscango\",\n        className: 'capture',\n        src: this.props.frontSubmitted ? require('../assets/images/card_back@3x.png') : require('../assets/images/illustration1@3x.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        capture: \"environment\",\n        id: \"camera\",\n        name: 'camera',\n        value: this.state.inputValue,\n        className: \"hidden\",\n        onChange: this.processImage.bind(this),\n        ref: this.textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"wrapper column capture_controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, this.props.sidesLeft === 2 && React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, process.env.REACT_APP_IDPASSPORT_ENABLED === 'true' && React.createElement(\"label\", {\n        htmlFor: \"camera\",\n        className: \"btn\",\n        onClick: function onClick() {\n          return _this6.props.setCardType(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'buttonBgText',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Capture ID/Passport\")), process.env.REACT_APP_MEDICAL_CARD_ENABLED === 'true' && React.createElement(\"label\", {\n        htmlFor: \"camera\",\n        className: \"btn\",\n        onClick: function onClick() {\n          return _this6.props.setCardType(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'buttonBgText',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"Capture Medical Card\"))), this.props.sidesLeft === 1 && React.createElement(\"label\", {\n        htmlFor: \"camera\",\n        className: 'btn',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"buttonBgText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"Capture \", this.getOrientationCopy(), \" of \", this.getCardTypeCopy())), this.props.sidesLeft === 1 && this.props.cardType === 2 && React.createElement(\"div\", {\n        className: 'btn outline',\n        onClick: function onClick() {\n          _this6.props.history.push('/results/medicard');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'buttonBdText',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"Skip this step\"))))));\n    }\n  }]);\n\n  return CapturePhoto;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    instanceID: state.config.instanceID,\n    orientation: state.idProperties.orientation,\n    cardType: state.idProperties.cardType,\n    sidesLeft: state.idProperties.sidesLeft,\n    frontSubmitted: state.config.frontSubmitted,\n    backSubmitted: state.config.backSubmitted\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setCardType: setCardType,\n    setInstanceID: setInstanceID,\n    setCardOrientation: setCardOrientation,\n    decrementSidesLeft: decrementSidesLeft,\n    submitFrontID: submitFrontID,\n    submitBackID: submitBackID\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CapturePhoto);","map":{"version":3,"sources":["C:\\SourceControl\\idscango-web\\src\\screens\\CapturePhoto.js"],"names":["React","Component","Fragment","bindActionCreators","connect","Header","decrementSidesLeft","setCardOrientation","setCardType","setInstanceID","submitBackID","submitFrontID","ApiService","Processing","CapturePhoto","props","state","inputValue","processing","textInput","createRef","classificationData","Promise","all","getImage","instanceID","orientation","getImageQualityMetric","then","response","imageResponse","imageQualityResponse","blurry","hasGlare","self","HorizontalResolution","VerticalResolution","Side","history","push","pathname","retryLastStep","arr","Uint8Array","raw","subArray","chunk","i","j","length","subarray","String","fromCharCode","apply","base64FrontReformattedImage","btoa","image","Image","src","resolve","reject","onload","width","height","aspectRatio","SharpnessMetric","process","env","REACT_APP_SHARPNESS_METRIC_ENABLED","GlareMetric","REACT_APP_GLARE_METRIC_ENABLED","cardImage","catch","error","getClassification","result","Type","ClassName","PresentationChanged","sidesLeft","getImageAndQualityMetrics","err","Error","canvasDataURL","binary","atob","split","array","charCodeAt","Blob","type","blobData","frontSubmitted","backSubmitted","replaceImage","cardType","postImage","navigator","appName","appVersion","indexOf","event","file","target","reader","FileReader","setState","window","scrollTo","isIEorEDGE","sendImageToAPI","files","e","File","FileList","document","createElement","canvas","context","getContext","MAX_WIDTH","MAX_HEIGHT","largerDimension","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","imageSmoothingEnabled","drawImage","canvasToDataURL","toDataURL","dataURLToBlob","readAsDataURL","location","isRetry","current","click","getOrientationCopy","getCardTypeCopy","require","processImage","bind","REACT_APP_IDPASSPORT_ENABLED","REACT_APP_MEDICAL_CARD_ENABLED","mapStateToProps","config","idProperties","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport { decrementSidesLeft, setCardOrientation, setCardType } from \"./actions/idPropertiesActions\";\r\nimport { setInstanceID, submitBackID, submitFrontID } from \"./actions/configActions\";\r\nimport ApiService from \"../services/api/api\";\r\nimport Processing from \"./Processing\";\r\n\r\nclass CapturePhoto extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputValue: null,\r\n            processing: false\r\n        }\r\n        this.textInput = React.createRef();\r\n    }\r\n\r\n    getImageAndQualityMetrics(classificationData) {\r\n        Promise.all([ApiService.getImage(this.props.instanceID, this.props.orientation), ApiService.getImageQualityMetric(this.props.instanceID, this.props.orientation)])\r\n            .then(response => {\r\n                let imageResponse = response[0],\r\n                    imageQualityResponse = response[1],\r\n                    blurry = false,\r\n                    hasGlare = false,\r\n                    self = this;\r\n\r\n                if (imageQualityResponse.HorizontalResolution < 300 || imageQualityResponse.VerticalResolution < 300) {\r\n                    if (imageQualityResponse.Side === 0) {\r\n                        self.props.submitFrontID();\r\n                    }\r\n                    if (imageQualityResponse.Side === 1) {\r\n                        self.props.submitBackID();\r\n                    }\r\n                    this.props.history.push({pathname: '/error/lowresolution', state: {retryLastStep: true}});\r\n                    return;\r\n                }\r\n\r\n                var arr = new Uint8Array(imageResponse);\r\n                var raw = '';\r\n                let subArray, chunk = 5000;\r\n                for (let i = 0, j = arr.length; i < j; i += chunk) {\r\n                    subArray = arr.subarray(i, i + chunk);\r\n                    raw += String.fromCharCode.apply(null, subArray);\r\n                }\r\n                var base64FrontReformattedImage = btoa(raw);\r\n\r\n                let image = new Image();\r\n                image.src = `data:image/jpeg;base64,${base64FrontReformattedImage}`;\r\n                new Promise((resolve, reject) => {\r\n                    image.onload = function() {\r\n\r\n                        var width, height;\r\n\r\n                        if(image.height > image.width) {\r\n                            width = image.height;\r\n                            height = image.width;\r\n                        }\r\n                        else {\r\n                            width = image.width;\r\n                            height = image.height;\r\n                        }\r\n\r\n                        let aspectRatio = width / height;\r\n                        if (aspectRatio < 1.4 || aspectRatio > 1.66) {\r\n                            if (imageQualityResponse.Side === 0) {\r\n                                self.props.submitFrontID();\r\n                            }\r\n                            if (imageQualityResponse.Side === 1) {\r\n                                self.props.submitBackID();\r\n                            }\r\n                            return self.props.history.push({pathname: '/error/default', state: {retryLastStep: true}});\r\n                        } else {\r\n                            if (imageQualityResponse.Side === 0) {\r\n                                self.props.submitFrontID();\r\n                            }\r\n                            if (imageQualityResponse.Side === 1) {\r\n                                self.props.submitBackID();\r\n                            }\r\n                            resolve();\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    if (imageQualityResponse.SharpnessMetric < 50 && process.env.REACT_APP_SHARPNESS_METRIC_ENABLED === 'true') {\r\n                        blurry = true;\r\n                    }\r\n                    if (imageQualityResponse.GlareMetric < 50 && process.env.REACT_APP_GLARE_METRIC_ENABLED === 'true') {\r\n                        hasGlare = true;\r\n                    }\r\n\r\n                    this.props.decrementSidesLeft();\r\n                    this.props.history.push('/photo/confirm', {\r\n                        blurry,\r\n                        hasGlare,\r\n                        classificationData,\r\n                        cardImage: `data:image/jpeg;base64,${base64FrontReformattedImage}`\r\n                    })\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                this.props.history.push('/error/default');\r\n            })\r\n    }\r\n\r\n    getClassification() {\r\n        ApiService.getClassification(this.props.instanceID)\r\n            .then(result => {\r\n                if (result.Type && result.Type.ClassName === 'Unknown') {\r\n                    this.props.history.push('/error/default');\r\n                } else {\r\n                    if (result.PresentationChanged && this.props.sidesLeft === 2) {\r\n                        this.props.setCardOrientation(1);\r\n                        this.getImageAndQualityMetrics(result);\r\n                    } else {\r\n                        this.getImageAndQualityMetrics(result);\r\n                    }\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                this.props.history.push('/error/default');\r\n                throw new Error(err);\r\n            });\r\n    }\r\n\r\n    dataURLToBlob(canvasDataURL) {\r\n        let binary = atob(canvasDataURL.split(',')[1]);\r\n        let array = [];\r\n        for (let i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: 'image/jpg' });\r\n    }\r\n\r\n    sendImageToAPI(blobData) {\r\n        if ((this.props.frontSubmitted && this.props.sidesLeft === 2) || (this.props.backSubmitted && this.props.sidesLeft === 2) || (this.props.backSubmitted && this.props.frontSubmitted && this.props.sidesLeft === 1)) {\r\n            ApiService.replaceImage(this.props.instanceID, this.props.orientation, blobData)\r\n                .then(response => {\r\n                    if (this.props.cardType === 1) {\r\n                        this.getClassification();\r\n                    } else {\r\n                        this.getImageAndQualityMetrics(null);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.props.history.push({pathname: '/error/default', state: {retryLastStep: true}});\r\n                    throw new Error(err);\r\n                })\r\n        } else {\r\n            ApiService.postImage(this.props.instanceID, this.props.orientation, blobData)\r\n                .then(response => {\r\n                    if (this.props.cardType === 1) {\r\n                        this.getClassification();\r\n                    } else {\r\n                        this.getImageAndQualityMetrics(null);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    this.props.history.push({pathname: '/error/default', state: {retryLastStep: true}});\r\n                    throw new Error(err);\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    isIEorEDGE() {\r\n        return navigator.appName === 'Microsoft Internet Explorer' || (navigator.appName === \"Netscape\" && navigator.appVersion.indexOf('Edge') > -1);\r\n    }\r\n\r\n    processImage(event) {\r\n        let file = event.target,\r\n            reader = new FileReader();\r\n\r\n        this.setState({\r\n            processing: true\r\n        });\r\n\r\n        if (!file) {\r\n            this.setState({\r\n                processing: false\r\n            });\r\n            return;\r\n        }\r\n        window.scrollTo(0, 0)\r\n\r\n        if (this.isIEorEDGE()) {\r\n            this.sendImageToAPI(file.files[0]);\r\n            return;\r\n        }\r\n\r\n        reader.onload = (e) => {\r\n            if (window.File && window.FileReader && window.FileList && window.Blob) {\r\n                let image = document.createElement('img');\r\n                image.src = e.target.result;\r\n                image.onload = () => {\r\n\r\n                    let canvas = document.createElement('canvas'),\r\n                        context = canvas.getContext('2d'),\r\n                        MAX_WIDTH = 3032,\r\n                        MAX_HEIGHT = 2008,\r\n                        width = image.width,\r\n                        height = image.height;\r\n\r\n                    //   context.drawImage(image, 0, 0);\r\n\r\n                    var largerDimension = width > height ? width : height;\r\n\r\n                    if (largerDimension > MAX_WIDTH) {\r\n                        if (width < height) {\r\n                            var aspectRatio = height / width;\r\n                            MAX_HEIGHT = MAX_WIDTH;\r\n                            MAX_WIDTH = MAX_HEIGHT / aspectRatio;\r\n                        }\r\n                        else {\r\n                            var aspectRatio = width / height;\r\n                            MAX_HEIGHT = MAX_WIDTH / aspectRatio;\r\n                        }\r\n                    } else {\r\n                        MAX_WIDTH = image.width;\r\n                        MAX_HEIGHT = image.height;\r\n                    }\r\n\r\n                    canvas.width = MAX_WIDTH;\r\n                    canvas.height = MAX_HEIGHT;\r\n\r\n                    context = canvas.getContext('2d');\r\n                    context.mozImageSmoothingEnabled = false;\r\n                    context.webkitImageSmoothingEnabled = false;\r\n                    context.msImageSmoothingEnabled = false;\r\n                    context.imageSmoothingEnabled = false;\r\n\r\n                    context.drawImage(image, 0, 0, MAX_WIDTH, MAX_HEIGHT);\r\n\r\n                    let canvasToDataURL = canvas.toDataURL(file.files[0].type, 90 * .01);\r\n                    let blobData = this.dataURLToBlob(canvasToDataURL);\r\n\r\n                    this.sendImageToAPI(blobData);\r\n                }\r\n            }\r\n        };\r\n\r\n        reader.readAsDataURL(file.files[0]);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.instanceID) {\r\n            this.props.setInstanceID();\r\n        }\r\n        if (this.props.location && this.props.location.state) {\r\n            if (this.props.location.state.isRetry) {\r\n                this.textInput.current.click();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getOrientationCopy() {\r\n        return this.props.orientation === 0 ? 'front' : 'back';\r\n    }\r\n\r\n    getCardTypeCopy() {\r\n        switch (this.props.cardType) {\r\n            case 1:\r\n                return 'ID card';\r\n            case 2:\r\n                return 'medical card';\r\n            default:\r\n                return 'ID card';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.processing) {\r\n            return <Processing />\r\n        }\r\n        return (\r\n            <Fragment>\r\n\r\n                <Header />\r\n\r\n                <div className='body column capture_photo'>\r\n\r\n                    <div className='row wrapper description_container'>\r\n                        <p className='description'>Upload a clear picture of the {this.getOrientationCopy()} of your {this.getCardTypeCopy()}.</p>\r\n                    </div>\r\n\r\n                    <div className=\"capture_group\">\r\n\r\n                        <div className='row wrapper capture_container'>\r\n\r\n\r\n                            {this.props.sidesLeft === 2 &&\r\n                            <img alt='idscango' className={'capture'} src={require('../assets/video/scan_process.gif')} />\r\n\r\n                            }\r\n                            {this.props.sidesLeft === 1 &&\r\n                                <img alt='idscango' className={'capture'} src={this.props.frontSubmitted ? require('../assets/images/card_back@3x.png') : require('../assets/images/illustration1@3x.png')} />\r\n                            }\r\n\r\n                            <input type=\"file\" accept=\"image/*\" capture=\"environment\" id=\"camera\"\r\n                                   name={'camera'}\r\n                                value={this.state.inputValue}\r\n                                className='hidden'\r\n                                onChange={this.processImage.bind(this)}\r\n                                ref={this.textInput}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"wrapper column capture_controls\">\r\n\r\n                            {this.props.sidesLeft === 2 &&\r\n                                <Fragment>\r\n                                    {process.env.REACT_APP_IDPASSPORT_ENABLED === 'true' &&\r\n                                        <label htmlFor=\"camera\" className='btn' onClick={() => this.props.setCardType(1)}>\r\n                                            <p className={'buttonBgText'}>Capture ID/Passport</p>\r\n                                        </label>\r\n                                    }\r\n                                    {process.env.REACT_APP_MEDICAL_CARD_ENABLED === 'true' &&\r\n                                        <label htmlFor=\"camera\" className='btn' onClick={() => this.props.setCardType(2)}>\r\n                                            <p className={'buttonBgText'}>Capture Medical Card</p>\r\n                                        </label>\r\n                                    }\r\n                                </Fragment>\r\n                            }\r\n\r\n                            {this.props.sidesLeft === 1 &&\r\n                                <label htmlFor=\"camera\" className={'btn'}>\r\n                                    <p className='buttonBgText'>Capture {this.getOrientationCopy()} of {this.getCardTypeCopy()}</p>\r\n                                </label>\r\n                            }\r\n                            {this.props.sidesLeft === 1 && this.props.cardType === 2 &&\r\n                                <div className={'btn outline'} onClick={() => { this.props.history.push('/results/medicard') }}>\r\n                                    <p className={'buttonBdText'}>Skip this step</p>\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        instanceID: state.config.instanceID,\r\n        orientation: state.idProperties.orientation,\r\n        cardType: state.idProperties.cardType,\r\n        sidesLeft: state.idProperties.sidesLeft,\r\n        frontSubmitted: state.config.frontSubmitted,\r\n        backSubmitted: state.config.backSubmitted\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({ setCardType, setInstanceID, setCardOrientation, decrementSidesLeft, submitFrontID, submitBackID }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CapturePhoto);"]},"metadata":{},"sourceType":"module"}