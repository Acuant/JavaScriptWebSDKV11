{"ast":null,"code":"import _classCallCheck from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\SourceControl\\\\idscango-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\SourceControl\\\\idscango-web\\\\src\\\\screens\\\\CapturePhoto.js\";\nimport React, { Component, Fragment } from 'react';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport Header from \"./Header\";\nimport { decrementSidesLeft, setCardOrientation, setCardType } from \"./actions/idPropertiesActions\";\nimport { setInstanceID, submitBackID, submitFrontID } from \"./actions/configActions\";\nimport ApiService from \"../services/api/api\";\nimport Processing from \"./Processing\";\n\nvar CapturePhoto =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CapturePhoto, _Component);\n\n  function CapturePhoto(props) {\n    var _this;\n\n    _classCallCheck(this, CapturePhoto);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CapturePhoto).call(this, props));\n    _this.state = {\n      inputValue: null,\n      processing: false\n    };\n    _this.textInput = React.createRef();\n    return _this;\n  }\n\n  _createClass(CapturePhoto, [{\n    key: \"isIEorEDGE\",\n    value: function isIEorEDGE() {\n      return navigator.appName === 'Microsoft Internet Explorer' || navigator.appName === \"Netscape\" && navigator.appVersion.indexOf('Edge') > -1;\n    }\n  }, {\n    key: \"processImage\",\n    value: function processImage(event) {\n      var file = event.target,\n          reader = new FileReader();\n      this.setState({\n        processing: true\n      });\n\n      if (!file) {\n        this.setState({\n          processing: false\n        });\n        return;\n      }\n\n      window.scrollTo(0, 0);\n\n      if (this.isIEorEDGE()) {\n        this.sendImageToAPI(file.files[0]);\n        return;\n      }\n\n      reader.onload = function (e) {\n        var _this2 = this;\n\n        if (window.File && window.FileReader && window.FileList && window.Blob) {\n          var image = document.createElement('img');\n          image.src = e.target.result;\n\n          image.onload = function () {\n            var canvas = document.createElement('canvas'),\n                context = canvas.getContext('2d'),\n                MAX_WIDTH = 2560,\n                MAX_HEIGHT = 1920,\n                width = image.width,\n                height = image.height; //context.drawImage(image, 0, 0);\n\n            var largerDimension = width > height ? width : height;\n\n            if (largerDimension > MAX_WIDTH) {\n              if (width < height) {\n                var aspectRatio = height / width;\n                MAX_HEIGHT = MAX_WIDTH;\n                MAX_WIDTH = MAX_HEIGHT / aspectRatio;\n              } else {\n                var aspectRatio = width / height;\n                MAX_HEIGHT = MAX_WIDTH / aspectRatio;\n              }\n            } else {\n              MAX_WIDTH = image.width;\n              MAX_HEIGHT = image.height;\n            }\n\n            canvas.width = MAX_WIDTH;\n            canvas.height = MAX_HEIGHT; // canvas.width = width;\n            // canvas.height = height;\n\n            context = canvas.getContext('2d');\n            context.mozImageSmoothingEnabled = false;\n            context.webkitImageSmoothingEnabled = false;\n            context.msImageSmoothingEnabled = false;\n            context.imageSmoothingEnabled = false;\n            context.drawImage(image, 0, 0, MAX_WIDTH, MAX_HEIGHT);\n            width = MAX_WIDTH;\n            height = MAX_HEIGHT;\n            var imgData = context.getImageData(0, 0, width, height);\n            window.AcuantJavascriptWebSdk.crop(imgData, width, height, {\n              onSuccess: function (result) {\n                if (result.dpi < 300) {\n                  this.props.history.push({\n                    pathname: '/error/lowresolution',\n                    state: {\n                      retryLastStep: true\n                    }\n                  });\n                } else {\n                  var isBlurry = false,\n                      hasGlare = false;\n\n                  if (result.sharpness < 50 && process.env.REACT_APP_SHARPNESS_METRIC_ENABLED === 'true') {\n                    isBlurry = true;\n                  }\n\n                  if (result.glare < 50 && process.env.REACT_APP_GLARE_METRIC_ENABLED === 'true') {\n                    hasGlare = true;\n                  }\n\n                  this.props.history.push('/photo/confirm', {\n                    blurry: isBlurry,\n                    hasGlare: hasGlare,\n                    cardImage: result.image.data\n                  });\n                }\n              }.bind(_this2),\n              onFail: function () {\n                this.props.history.push('/error/default');\n              }.bind(_this2)\n            });\n          };\n        }\n      }.bind(this);\n\n      reader.readAsDataURL(file.files[0]);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.instanceID) {\n        this.props.setInstanceID();\n      }\n\n      if (this.props.location && this.props.location.state) {\n        if (this.props.location.state.isRetry) {\n          this.textInput.current.click();\n        }\n      }\n    }\n  }, {\n    key: \"getOrientationCopy\",\n    value: function getOrientationCopy() {\n      return this.props.orientation === 0 ? 'front' : 'back';\n    }\n  }, {\n    key: \"getCardTypeCopy\",\n    value: function getCardTypeCopy() {\n      switch (this.props.cardType) {\n        case 1:\n          return 'ID card';\n\n        case 2:\n          return 'medical card';\n\n        default:\n          return 'ID card';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.processing) {\n        return React.createElement(Processing, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"body column capture_photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row wrapper description_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Upload a clear picture of the \", this.getOrientationCopy(), \" of your \", this.getCardTypeCopy(), \".\")), React.createElement(\"div\", {\n        className: \"capture_group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row wrapper capture_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, this.props.sidesLeft === 2 && React.createElement(\"img\", {\n        alt: \"idscango\",\n        className: 'capture',\n        src: require('../assets/video/scan_process.gif'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), this.props.sidesLeft === 1 && React.createElement(\"img\", {\n        alt: \"idscango\",\n        className: 'capture',\n        src: this.props.frontSubmitted ? require('../assets/images/card_back@3x.png') : require('../assets/images/illustration1@3x.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        capture: \"environment\",\n        id: \"camera\",\n        name: 'camera',\n        value: this.state.inputValue,\n        className: \"hidden\",\n        on: true,\n        onChange: this.processImage.bind(this),\n        ref: this.textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"wrapper column capture_controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, this.props.sidesLeft === 2 && React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, process.env.REACT_APP_IDPASSPORT_ENABLED === 'true' && React.createElement(\"label\", {\n        htmlFor: \"camera\",\n        className: \"btn\",\n        onClick: function onClick() {\n          return _this3.props.setCardType(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'buttonBgText',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Capture ID/Passport\")), process.env.REACT_APP_MEDICAL_CARD_ENABLED === 'true' && React.createElement(\"label\", {\n        htmlFor: \"camera\",\n        className: \"btn\",\n        onClick: function onClick() {\n          return _this3.props.setCardType(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'buttonBgText',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Capture Medical Card\"))), this.props.sidesLeft === 1 && React.createElement(\"label\", {\n        htmlFor: \"camera\",\n        className: 'btn',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"buttonBgText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Capture \", this.getOrientationCopy(), \" of \", this.getCardTypeCopy())), this.props.sidesLeft === 1 && this.props.cardType === 2 && React.createElement(\"div\", {\n        className: 'btn outline',\n        onClick: function onClick() {\n          _this3.props.history.push('/results/medicard');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'buttonBdText',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Skip this step\"))))));\n    }\n  }]);\n\n  return CapturePhoto;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    instanceID: state.config.instanceID,\n    orientation: state.idProperties.orientation,\n    cardType: state.idProperties.cardType,\n    sidesLeft: state.idProperties.sidesLeft,\n    frontSubmitted: state.config.frontSubmitted,\n    backSubmitted: state.config.backSubmitted\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setCardType: setCardType,\n    setInstanceID: setInstanceID,\n    setCardOrientation: setCardOrientation,\n    decrementSidesLeft: decrementSidesLeft,\n    submitFrontID: submitFrontID,\n    submitBackID: submitBackID\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CapturePhoto);","map":{"version":3,"sources":["C:\\SourceControl\\idscango-web\\src\\screens\\CapturePhoto.js"],"names":["React","Component","Fragment","bindActionCreators","connect","Header","decrementSidesLeft","setCardOrientation","setCardType","setInstanceID","submitBackID","submitFrontID","ApiService","Processing","CapturePhoto","props","state","inputValue","processing","textInput","createRef","navigator","appName","appVersion","indexOf","event","file","target","reader","FileReader","setState","window","scrollTo","isIEorEDGE","sendImageToAPI","files","onload","e","File","FileList","Blob","image","document","createElement","src","result","canvas","context","getContext","MAX_WIDTH","MAX_HEIGHT","width","height","largerDimension","aspectRatio","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","imageSmoothingEnabled","drawImage","imgData","getImageData","AcuantJavascriptWebSdk","crop","onSuccess","dpi","history","push","pathname","retryLastStep","isBlurry","hasGlare","sharpness","process","env","REACT_APP_SHARPNESS_METRIC_ENABLED","glare","REACT_APP_GLARE_METRIC_ENABLED","blurry","cardImage","data","bind","onFail","readAsDataURL","instanceID","location","isRetry","current","click","orientation","cardType","getOrientationCopy","getCardTypeCopy","sidesLeft","require","frontSubmitted","processImage","REACT_APP_IDPASSPORT_ENABLED","REACT_APP_MEDICAL_CARD_ENABLED","mapStateToProps","config","idProperties","backSubmitted","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport { decrementSidesLeft, setCardOrientation, setCardType } from \"./actions/idPropertiesActions\";\r\nimport { setInstanceID, submitBackID, submitFrontID } from \"./actions/configActions\";\r\nimport ApiService from \"../services/api/api\";\r\nimport Processing from \"./Processing\";\r\n\r\nclass CapturePhoto extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputValue: null,\r\n            processing: false        \r\n        }\r\n        this.textInput = React.createRef();\r\n    }\r\n\r\n    isIEorEDGE() {\r\n        return navigator.appName === 'Microsoft Internet Explorer' || (navigator.appName === \"Netscape\" && navigator.appVersion.indexOf('Edge') > -1);\r\n    }\r\n\r\n    processImage(event) {\r\n        let file = event.target,\r\n            reader = new FileReader();\r\n\r\n        this.setState({\r\n            processing: true\r\n        });\r\n\r\n        if (!file) {\r\n            this.setState({\r\n                processing: false\r\n            });\r\n            return;\r\n        }\r\n        window.scrollTo(0, 0)\r\n\r\n        if (this.isIEorEDGE()) {\r\n            this.sendImageToAPI(file.files[0]);\r\n            return;\r\n        }\r\n\r\n        reader.onload = function(e){\r\n            if (window.File && window.FileReader && window.FileList && window.Blob) {\r\n                let image = document.createElement('img');\r\n                image.src = e.target.result;\r\n                image.onload = () => {\r\n                    let canvas = document.createElement('canvas'),\r\n                        context = canvas.getContext('2d'),\r\n                       MAX_WIDTH = 2560,\r\n                       MAX_HEIGHT = 1920,\r\n                        width = image.width,\r\n                        height = image.height;\r\n\r\n                      //context.drawImage(image, 0, 0);\r\n\r\n                   var largerDimension = width > height ? width : height;\r\n\r\n                    if (largerDimension > MAX_WIDTH) {\r\n                        if (width < height) {\r\n                            var aspectRatio = height / width;\r\n                            MAX_HEIGHT = MAX_WIDTH;\r\n                            MAX_WIDTH = MAX_HEIGHT / aspectRatio;\r\n                        }\r\n                        else {\r\n                            var aspectRatio = width / height;\r\n                            MAX_HEIGHT = MAX_WIDTH / aspectRatio;\r\n                        }\r\n                    } else {\r\n                        MAX_WIDTH = image.width;\r\n                        MAX_HEIGHT = image.height;\r\n                    } \r\n\r\n                   canvas.width = MAX_WIDTH;\r\n                   canvas.height = MAX_HEIGHT;\r\n\r\n                    // canvas.width = width;\r\n                    // canvas.height = height;\r\n\r\n                    context = canvas.getContext('2d');\r\n                    \r\n                    context.mozImageSmoothingEnabled = false;\r\n                    context.webkitImageSmoothingEnabled = false;\r\n                    context.msImageSmoothingEnabled = false;\r\n                    context.imageSmoothingEnabled = false;\r\n\r\n                    context.drawImage(image, 0, 0, MAX_WIDTH, MAX_HEIGHT);         \r\n\r\n                     width = MAX_WIDTH;\r\n                     height = MAX_HEIGHT;\r\n\r\n                    var imgData = context.getImageData(0, 0, width, height);\r\n\r\n                    window.AcuantJavascriptWebSdk.crop(imgData, width, height,  \r\n                    {\r\n                        onSuccess: function(result){\r\n                            if(result.dpi < 300){\r\n                                this.props.history.push({pathname: '/error/lowresolution', state: {retryLastStep: true}});\r\n                            }\r\n                            else{\r\n                                var isBlurry=false,\r\n                                    hasGlare = false\r\n                                if (result.sharpness < 50 && process.env.REACT_APP_SHARPNESS_METRIC_ENABLED === 'true') {\r\n                                    isBlurry = true;\r\n                                }\r\n                                if (result.glare < 50 && process.env.REACT_APP_GLARE_METRIC_ENABLED === 'true') {\r\n                                    hasGlare = true;\r\n                                }\r\n\r\n                                this.props.history.push('/photo/confirm', {\r\n                                    blurry: isBlurry,\r\n                                    hasGlare: hasGlare,\r\n                                    cardImage: result.image.data\r\n                                });\r\n                            }\r\n                        }.bind(this),\r\n\r\n                        onFail: function(){\r\n                            this.props.history.push('/error/default');\r\n                        }.bind(this)\r\n                    });\r\n                }\r\n            }\r\n        }.bind(this);\r\n\r\n        reader.readAsDataURL(file.files[0]);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (!this.props.instanceID) {\r\n            this.props.setInstanceID();\r\n        }\r\n        if (this.props.location && this.props.location.state) {\r\n            if (this.props.location.state.isRetry) {\r\n                this.textInput.current.click();\r\n            }\r\n        }\r\n    }\r\n\r\n    getOrientationCopy() {\r\n        return this.props.orientation === 0 ? 'front' : 'back';\r\n    }\r\n\r\n    getCardTypeCopy() {\r\n        switch (this.props.cardType) {\r\n            case 1:\r\n                return 'ID card';\r\n            case 2:\r\n                return 'medical card';\r\n            default:\r\n                return 'ID card';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.processing) {\r\n            return <Processing />\r\n        }\r\n        return (\r\n            <Fragment>\r\n\r\n                <Header />\r\n\r\n                <div className='body column capture_photo'>\r\n\r\n                    <div className='row wrapper description_container'>\r\n                        <p className='description'>Upload a clear picture of the {this.getOrientationCopy()} of your {this.getCardTypeCopy()}.</p>\r\n                    </div>\r\n\r\n                    <div className=\"capture_group\">\r\n\r\n                        <div className='row wrapper capture_container'>\r\n\r\n\r\n                            {this.props.sidesLeft === 2 &&\r\n                            <img alt='idscango' className={'capture'} src={require('../assets/video/scan_process.gif')} />\r\n\r\n                            }\r\n                            {this.props.sidesLeft === 1 &&\r\n                                <img alt='idscango' className={'capture'} src={this.props.frontSubmitted ? require('../assets/images/card_back@3x.png') : require('../assets/images/illustration1@3x.png')} />\r\n                            }\r\n\r\n                            <input type=\"file\" accept=\"image/*\" capture=\"environment\" id=\"camera\"\r\n                                   name={'camera'}\r\n                                value={this.state.inputValue}\r\n                                className='hidden'\r\n                                on\r\n                                onChange={this.processImage.bind(this)}\r\n                                ref={this.textInput}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"wrapper column capture_controls\">\r\n\r\n                            {this.props.sidesLeft === 2 &&\r\n                                <Fragment>\r\n                                    {process.env.REACT_APP_IDPASSPORT_ENABLED === 'true' &&\r\n                                        <label htmlFor=\"camera\" className='btn' onClick={() => this.props.setCardType(1)}>\r\n                                            <p className={'buttonBgText'}>Capture ID/Passport</p>\r\n                                        </label>\r\n                                    }\r\n                                    {process.env.REACT_APP_MEDICAL_CARD_ENABLED === 'true' &&\r\n                                        <label htmlFor=\"camera\" className='btn' onClick={() => this.props.setCardType(2)}>\r\n                                            <p className={'buttonBgText'}>Capture Medical Card</p>\r\n                                        </label>\r\n                                    }\r\n                                </Fragment>\r\n                            }\r\n\r\n                            {this.props.sidesLeft === 1 &&\r\n                                <label htmlFor=\"camera\" className={'btn'}>\r\n                                    <p className='buttonBgText'>Capture {this.getOrientationCopy()} of {this.getCardTypeCopy()}</p>\r\n                                </label>\r\n                            }\r\n                            {this.props.sidesLeft === 1 && this.props.cardType === 2 &&\r\n                                <div className={'btn outline'} onClick={() => { this.props.history.push('/results/medicard') }}>\r\n                                    <p className={'buttonBdText'}>Skip this step</p>\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        instanceID: state.config.instanceID,\r\n        orientation: state.idProperties.orientation,\r\n        cardType: state.idProperties.cardType,\r\n        sidesLeft: state.idProperties.sidesLeft,\r\n        frontSubmitted: state.config.frontSubmitted,\r\n        backSubmitted: state.config.backSubmitted\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({ setCardType, setInstanceID, setCardOrientation, decrementSidesLeft, submitFrontID, submitBackID }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CapturePhoto);"]},"metadata":{},"sourceType":"module"}